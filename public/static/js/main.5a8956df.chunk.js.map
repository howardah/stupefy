{"version":3,"sources":["components/card.jsx","components/character.jsx","javascripts/deck.js","javascripts/card-setup.js","components/player.jsx","components/card-deck.jsx","components/utils/tools.js","components/utils/resolve-event.jsx","components/utils/end-turn.js","components/utils/clear-table.js","components/utils/setup-cycle.js","components/utils/cycle-cleanse.js","components/utils/discard-cards.js","components/utils/turn-tools/discard-selected.js","components/utils/turn-tools/count-cards.js","components/utils/turn-tools.js","components/card-rules/spells/protego.js","components/card-rules/spells/takeHit.js","components/utils/checkTopCard.js","components/card-rules/spells/houseHide.js","components/card-rules/stupefy.js","components/utils/character-events.jsx","components/card-rules/spells/invisibilityCloak.js","components/card-rules/expelliarmus.js","components/card-rules/accio.js","components/card-rules/butterbeer.js","components/card-rules/spells/stupefy.js","components/card-rules/dementors.js","components/card-rules/garroting_gas.js","components/card-rules/honeydukes.js","components/card-rules/weasleys_wizard_weezes.js","components/card-rules/diagon_alley.js","components/card-rules/wizards_duel.js","components/card-rules/three_broomsticks.js","components/utils/death.js","components/card-rules/all-rules.js","components/card-rules/azkaban.js","components/card-rules/discard.js","components/card-rules/ressurection_stone.js","components/card-rules/fiendfyre.js","components/card-rules/felix.js","components/utils/cycle-beginning.js","components/sidebar.jsx","components/alert.jsx","components/action.jsx","components/table.jsx","components/utils/card-targets.js","components/card-rules/spells/sort-players.js","components/character-card.jsx","components/choose-character.jsx","components/board.jsx","components/utils/get-targets.js","components/create-join/create-room.jsx","components/create-join/join-room.jsx","components/create-join/create-join.jsx","components/create-join/waiting-player.jsx","components/create-join/chat.jsx","components/create-join/room.jsx","App.js","serviceWorker.js","index.js"],"names":["Card","isEmpty","checker","playCard","props","player","card","style","undefined","myCard","fileName","backgroundImage","classes","house","extraClass","onClick","this","cardname","className","Component","Character","state","character","Array","from","health","keys","reverse","map","v","i","key","Deck","cards","discards","length","number","discard","splice","shuffle","unshift","inCard","inCards","toShuffle","j","Math","floor","random","temp","characters","name","power","forEach","shots","draw","initialDeck","houses","fill","accio","stupefy","protego","azkaban","jailed","beer","expelliarmus","e","ceil","others","range","Number","POSITIVE_INFINITY","distance","deck","id","mainDeck","characterDeck","drawCards","emptyCard","Player","checkDistance","rangeOverride","players","filter","p","activePlayer","player_id","thisIndex","findIndex","tableau","playerClasses","index","that","deadPlayers","includes","role","replace","handClickable","location","targets","tableauClickable","characterClickable","apparate","clickable","ref","innerRef","turnCycle","felix","some","turn","tableauClick","characterClick","currentCard","showCards","hand","handClick","CardDeck","myTurn","myEvent","events","cardType","target","isDrawClickable","isDiscardClickable","deckClick","titleCase","str","toLowerCase","split","charAt","toUpperCase","slice","join","cardsInclude","findCard","cardsIncludeName","cardIndex","fc","cardsIndexName","playerIndex","eventIndex","message","event","popup","popUp","data","actions","bystanders","options","resolutionEvent","popupType","deathEvent","deathCheck","newlyDead","push","tableauProblems","wands","cardnames","wandCount","endTurn","cloneDeep","change","jailLocation","serveCard","clear","given_deck","table","clearTable","Object","assign","addAlert","setupCycle","phase","action","hotseat","used","returnState","console","log","this_player","shortName","instigator","cycleCleanse","given_turnCycle","choice","serveCards","discardSelected","countAllCards","count","unique","catcher","duplicates","incrementTurn","current_turn","turn_order","dead_players","turnIndex","indexOf","isProtego","playProtego","cardValidation","alert","reduce","out","final","resolve","takeHit","checkTopCard","this_deck","G","S","H","R","drawCard","gotit","checked","h","houseHide","oneBefore","turnOrder","findMe","topCard","primary","subject","popupOptions","label","function","currentOptions","protegoOptions","invisibilityHide","clearEvent","resolution","lastAction","personalText","eventText","given_subject","butterbeer","maxHealth","playStupefy","status","success","isStupefy","dementors","dementorEvent","damaged","garroting_gas","gasEvent","honeydukes","weasleys_wizard_weezes","diagon_alley","currentIndex","thisEvent","secondary","shift","lastPlayer","wizards_duel","duel","thisPlayer","thatPlayer","thisTurn","response","winner","loser","winnerText","loserText","watcherText","three_broomsticks","bartender","lilyMessage","role_message","werewolf","auror","death","dyingPlayers","deathPowers","returnAllChanges","afterDeath","end","deaths","killer","checkForLilyEvents","umbridge","lily_yes","dyingPlayer","lily","lily_no","Proxy","watcherMessage","discardEvent","dump","ressurection_stone","fiendfyre","fiendfyreEvent","lastSubject","fiendfyreCard","watchMessage","nextSubjectId","nextSubject","subject_index","felixMessage","felixEvent","shoot","indexes","removedCard","cycleBeginning","cancel","get","hasOwnProperty","SideBar","query","room","toggleCards","Alert","hidden","unhide","setState","hide","deleteMe","setTimeout","top","resolutionLoop","looping","replaceNames","running","acFunction","Table","tableClickable","tableClick","cardTargets","sortPlayers","given_players","given_order","newPlayers","CharacterCard","ChooseCharacter","getRoleSentence","chooseCharacter","ENDPOINT","window","origin","Board","setupObj","alerts","player_room","componentDidMount","socket","socketIOClient","emit","on","catchSocket","time","Date","now","pauseRoom","resumeRoom","deleteAlert","emitEvent","nextTurn","turnEnded","setup","beforePlayer","eventCreation","tableauPlayer","handPlayer","tp","drawPile","afterPlayer","actionClick","result","workingState","deathObj","isArray","clearResolution","orderedPlayers","getTargets","Fragment","boardDeets","board","CreateRoom","roomname","password","playername","redirect","value","handleChange","handleSubmit","preventDefault","createRoom","queryString","encodeURIComponent","fetch","then","res","json","roomName","renderRedirect","to","changeToggle","type","placeholder","autoComplete","onChange","marginTop","JoinRoom","error","CreateJoin","toggle","WaitingPlayer","sendToSocket","ChatMessage","getName","allPlayers","format","text","process","Room","q","parse","search","filtered_players","chat","sockets","users","gameState","startState","socketroom","camelCase","apiLocation","componentDidUpdate","prevProps","prevState","filterPlayer","info","activePlayers","enterChat","newChat","startGame","onKeyDown","Stupefy","getQueryObj","isLoaded","onRef","App","pathname","path","render","Boolean","hostname","match","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch"],"mappings":"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","file":"static/js/main.5a8956df.chunk.js","sourcesContent":["import React, { Component } from \"react\";\n\nclass Card extends Component {\n  isEmpty = (checker) => {\n    return checker === \"\";\n  };\n\n  playCard = () => {\n    this.props.playCard(this.props.player, this.props.card);\n  };\n\n  style = () => {\n    if (this.props.myCard === undefined || this.props.myCard) {\n      return this.props.card.fileName === \"\"\n        ? {}\n        : {\n            backgroundImage:\n              \"url('/images/stupefy/\" + this.props.card.fileName + \".jpg')\",\n          };\n    }\n    return {};\n  };\n\n  classes = () => {\n    let classes = \"card\";\n\n    if (this.props.myCard === undefined || this.props.myCard) {\n      classes += \" \" + this.props.card.fileName;\n      if (!this.isEmpty(this.props.card.house))\n        classes += \" \" + this.props.card.house;\n      if (this.isEmpty(this.props.card.fileName)) classes += \" empty\";\n    }\n\n    classes += \" \" + this.props.extraClass;\n\n    return classes;\n  };\n\n  render() {\n    return (\n      <div\n        onClick={this.playCard}\n        cardname={this.props.card.fileName}\n        className={this.classes()}\n        style={this.style()}\n      ></div>\n    );\n  }\n}\n\nexport default Card;\n","import React, { Component } from \"react\";\nimport Card from \"./card\";\n\nclass Character extends Card {\n  state = {};\n\n  render() {\n    return (\n      <div className=\"character\">\n        <div\n          className={\n            this.props.character.fileName +\n            \" card \" +\n            this.props.extraClass +\n            (this.isEmpty(this.props.character.house)\n              ? \"\"\n              : this.props.character.house + \" \")\n          }\n          style={{\n            backgroundImage:\n              \"url('/images/stupefy/characters/\" +\n              this.props.character.fileName +\n              \".jpg')\",\n          }}\n          onClick={this.props.playCard}\n        ></div>\n        <div className=\"health card\">\n          {Array.from(Array(this.props.character.health).keys())\n            .reverse()\n            .map((v, i) => (\n              <div key={i} className={\"health wands wands_\" + (v + 1)}></div>\n            ))}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Character;\n","export const Deck = class {\n  constructor(cards, discards) {\n    this.cards = cards || [];\n    this.discards = discards || [];\n  }\n\n  getLength() {\n    return this.cards.length;\n  }\n\n  drawCards(number, discard) {\n    if (discard) return this.discards.splice(0, number);\n    if (this.cards.length === 0) this.shuffle();\n    return this.cards.splice(0, number);\n  }\n\n  drawCard(discard) {\n    if (discard) return this.discards.splice(0, 1)[0];\n    if (this.cards.length === 0) this.shuffle();\n    return this.cards.splice(0, 1)[0];\n  }\n\n  backToTheTop(cards) {\n    this.cards.unshift(cards);\n  }\n\n  serveCard(inCard) {\n    this.discards.unshift(inCard);\n  }\n  serveCards(inCards) {\n    this.discards.splice(0, 0, ...inCards);\n  }\n\n  copy() {\n    return [this.cards, this.discards];\n  }\n\n  shuffle() {\n    let toShuffle = [...this.cards, ...this.discards];\n\n    for (let i = toShuffle.length - 1; i > 0; i--) {\n      const j = Math.floor(Math.random() * i);\n      const temp = toShuffle[i];\n      toShuffle[i] = toShuffle[j];\n      toShuffle[j] = temp;\n    }\n\n    this.cards = toShuffle;\n    this.discards = [];\n  }\n};\n","import { Deck } from \"./deck\";\n\nexport const cardRules = {\n  stupefy: () => {\n    console.log(\"Shot ye!\");\n  },\n  protego: () => {\n    console.log(\"no you didn't!\");\n  },\n};\n\nexport const mainDeck = () => {\n  let houses = Array(82)\n    .fill(\"G\", 0, 20)\n    .fill(\"R\", 20, 41)\n    .fill(\"S\", 41, 61)\n    .fill(\"H\", 61, 82);\n  let accio = Array(4).fill({ name: \"accio\", power: {} }),\n    stupefy = Array(25).fill({ name: \"stupefy\", power: {} }),\n    protego = Array(12).fill({ name: \"protego\", power: {} }),\n    azkaban = Array(3).fill({ name: \"azkaban\", power: { jailed: true } }),\n    beer = Array(6).fill({ name: \"butterbeer\", power: {} }),\n    expelliarmus = [...Array(4)].map((e) => ({\n      name: \"expelliarmus_\" + Math.ceil(Math.random() * 3),\n      power: {},\n    })),\n    others = [\n      { name: \"larch_wand\", power: { range: 4 } },\n      { name: \"yew_wand\", power: { range: 4 } },\n      { name: \"aspen_wand\", power: { range: 3 } },\n      { name: \"holly_wand\", power: { range: 2, \"yew-immunity\": true } },\n      { name: \"elder_wand\", power: { shots: Number.POSITIVE_INFINITY } },\n      { name: \"fiendfyre\", power: {} },\n      { name: \"broomstick\", power: { distance: 1 } },\n      { name: \"broomstick\", power: { distance: 1 } },\n      { name: \"polyjuice_potion\", power: {} },\n      { name: \"resurrection_stone\", power: {} },\n      { name: \"expecto_patronum\", power: {} },\n      { name: \"wizards_duel\", power: {} },\n      { name: \"wizards_duel\", power: {} },\n      { name: \"wizards_duel\", power: {} },\n      { name: \"weasleys_wizard_weezes\", power: {} },\n      { name: \"vanishing_cabinet\", power: {} },\n      { name: \"vanishing_cabinet\", power: {} },\n      { name: \"invisibility_cloak\", power: {} },\n      { name: \"felix_felicis\", power: {} },\n      { name: \"dementors\", power: {} },\n      { name: \"dementors\", power: {} },\n      { name: \"apparate\", power: {} },\n      { name: \"three_broomsticks\", power: {} },\n      { name: \"honeydukes\", power: {} },\n      { name: \"honeydukes\", power: {} },\n      { name: \"garroting_gas\", power: {} },\n      { name: \"diagon_alley\", power: {} },\n      { name: \"diagon_alley\", power: {} },\n    ],\n    deck = [\n      ...accio,\n      ...stupefy,\n      ...protego,\n      ...azkaban,\n      ...beer,\n      ...others,\n      ...expelliarmus,\n    ];\n\n  deck.forEach((v, i) => {\n    deck[i] = {\n      id: i,\n      name: v.name,\n      fileName: v.name,\n      power: v.power,\n      house: houses.splice(Math.floor(Math.random() * houses.length), 1)[0],\n    };\n  });\n\n  return deck;\n};\n\nconst characters = [\n  {\n    fileName: \"albus_dumbledore\",\n    name: \"Albus Dumbledore\",\n    house: \"G\",\n    health: 4,\n    \"max-health\": 4,\n    power: {},\n  },\n  {\n    fileName: \"arthur_weasley\",\n    name: \"Arthur Weasley\",\n    house: \"G\",\n    health: 4,\n    \"max-health\": 4,\n    power: {},\n  },\n  {\n    fileName: \"bellatrix_lestrange\",\n    name: \"Bellatrix Lestrange\",\n    house: \"S\",\n    health: 4,\n    \"max-health\": 4,\n    power: {},\n  },\n  {\n    fileName: \"cedric_diggory\",\n    name: \"Cedric Diggory\",\n    house: \"H\",\n    health: 4,\n    \"max-health\": 4,\n    power: {},\n  },\n  {\n    fileName: \"dobby\",\n    name: \"Dobby\",\n    house: \"\",\n    health: 4,\n    \"max-health\": 4,\n    power: {},\n  },\n  {\n    fileName: \"dolores_umbridge\",\n    name: \"Dolores Umbridge\",\n    house: \"S\",\n    health: 4,\n    \"max-health\": 4,\n    power: {},\n  },\n  {\n    fileName: \"draco_malfoy\",\n    name: \"Draco Malfoy\",\n    house: \"S\",\n    health: 3,\n    \"max-health\": 3,\n    power: {},\n  },\n  {\n    fileName: \"fenrir_greyback\",\n    name: \"Fenrir Greyback\",\n    house: \"S\",\n    health: 4,\n    \"max-health\": 4,\n    power: {},\n  },\n  {\n    fileName: \"fred_and_george\",\n    name: \"Fred & George Weasley\",\n    house: \"G\",\n    health: 4,\n    \"max-health\": 4,\n    power: {},\n  },\n  {\n    fileName: \"gilderoy_lockhart\",\n    name: \"Gilderoy Lockhart\",\n    house: \"R\",\n    health: 4,\n    \"max-health\": 4,\n    power: {},\n  },\n  {\n    fileName: \"ginny_weasley\",\n    name: \"Ginny Weasley\",\n    house: \"G\",\n    health: 4,\n    \"max-health\": 4,\n    power: {},\n  },\n  {\n    fileName: \"harry_potter\",\n    name: \"Harry Potter\",\n    house: \"G\",\n    health: 3,\n    \"max-health\": 4,\n    power: {},\n  },\n  {\n    fileName: \"hermione_granger\",\n    name: \"Hermione Granger\",\n    house: \"G\",\n    health: 4,\n    \"max-health\": 4,\n    power: {},\n  },\n  {\n    fileName: \"james_potter\",\n    name: \"James Potter\",\n    house: \"G\",\n    health: 4,\n    \"max-health\": 4,\n    power: {},\n  },\n  {\n    fileName: \"lily_potter\",\n    name: \"Lily Potter\",\n    house: \"G\",\n    health: 4,\n    \"max-health\": 4,\n    power: {},\n  },\n  {\n    fileName: \"lucius_malfoy\",\n    name: \"Lucius Malfoy\",\n    house: \"S\",\n    health: 4,\n    \"max-health\": 4,\n    power: {},\n  },\n  {\n    fileName: \"luna_lovegood\",\n    name: \"Luna Lovegood\",\n    house: \"R\",\n    health: 3,\n    \"max-health\": 3,\n    power: {},\n  },\n  {\n    fileName: \"mad-eye_moody\",\n    name: 'Alastor \"Mad-Eye\" Moody',\n    house: \"R\",\n    health: 4,\n    \"max-health\": 4,\n    power: {},\n  },\n  {\n    fileName: \"minerva_mchonagall\",\n    name: \"Minerva McGonagall\",\n    house: \"G\",\n    health: 4,\n    \"max-health\": 4,\n    power: {},\n  },\n  {\n    fileName: \"molly_weasley\",\n    name: \"Molly Weasley\",\n    house: \"G\",\n    health: 4,\n    \"max-health\": 4,\n    power: {},\n  },\n  {\n    fileName: \"mundungus_fletcher\",\n    name: \"Mundungus Fletcher\",\n    house: \"S\",\n    health: 4,\n    \"max-health\": 4,\n    power: {},\n  },\n  {\n    fileName: \"neville_longbottom\",\n    name: \"Neville Longbottom\",\n    house: \"G\",\n    health: 4,\n    \"max-health\": 4,\n    power: {},\n  },\n  {\n    fileName: \"nymphadora_tonks\",\n    name: \"Nymphadora Tonks\",\n    house: \"H\",\n    health: 4,\n    \"max-health\": 4,\n    power: {},\n  },\n  {\n    fileName: \"peeves\",\n    name: \"Peeves\",\n    house: \"\",\n    health: 3,\n    \"max-health\": 3,\n    power: {},\n  },\n  {\n    fileName: \"peter_pettigrew\",\n    name: \"Peter Pettigrew\",\n    house: \"G\",\n    health: 3,\n    \"max-health\": 3,\n    power: {},\n  },\n  {\n    fileName: \"remus_lupin\",\n    name: \"Remus Lupin\",\n    house: \"G\",\n    health: 4,\n    \"max-health\": 4,\n    power: {},\n  },\n  {\n    fileName: \"ron_weasley\",\n    name: \"Ron Weasley\",\n    house: \"G\",\n    health: 4,\n    \"max-health\": 4,\n    power: {},\n  },\n  {\n    fileName: \"rubeus_hagrid\",\n    name: \"Rubeus Hagrid\",\n    house: \"G\",\n    health: 4,\n    \"max-health\": 4,\n    power: {},\n  },\n  {\n    fileName: \"severus_snape\",\n    name: \"Severus Snape\",\n    house: \"S\",\n    health: 3,\n    \"max-health\": 3,\n    power: {},\n  },\n  {\n    fileName: \"sirius_black\",\n    name: \"Sirius Black\",\n    house: \"G\",\n    health: 4,\n    \"max-health\": 4,\n    power: {},\n  },\n  {\n    fileName: \"voldemort\",\n    name: \"Voldemort\",\n    house: \"S\",\n    health: 3,\n    \"max-health\": 3,\n    power: {},\n  },\n];\n\ncharacters.forEach((v, i) => {\n  v.shots = 1;\n  v.draw = 2;\n  characters[i] = v;\n});\n\n// export const Deck = class {\n//   constructor(cards, discards) {\n//     this.cards = cards || [];\n//     this.discards = discards || [];\n//   }\n\n//   getLength() {\n//     return this.cards.length;\n//   }\n\n//   drawCards(number, discard) {\n//     if (discard) return this.discards.splice(0, number);\n//     if (this.cards.length === 0) this.shuffle();\n//     return this.cards.splice(0, number);\n//   }\n\n//   backToTheTop(cards) {\n//     this.cards.unshift(cards);\n//   }\n\n//   serveCard(inCard) {\n//     this.discards.unshift(inCard);\n//   }\n\n//   shuffle() {\n//     let toShuffle = [...this.cards, ...this.discards];\n\n//     for (let i = toShuffle.length - 1; i > 0; i--) {\n//       const j = Math.floor(Math.random() * i);\n//       const temp = toShuffle[i];\n//       toShuffle[i] = toShuffle[j];\n//       toShuffle[j] = temp;\n//     }\n\n//     this.cards = toShuffle;\n//     this.discards = [];\n//   }\n// };\n\nconst initialDeck = new Deck(mainDeck()),\n  characterDeck = new Deck(characters);\n\ninitialDeck.shuffle();\ncharacterDeck.shuffle();\n\nexport const players = [\n    {\n      id: 0,\n      name: \"Adam\",\n      character: characterDeck.drawCards(1)[0],\n      tableau: [],\n      hand: [\n        initialDeck.drawCards(1)[0],\n        initialDeck.drawCards(1)[0],\n        initialDeck.drawCards(1)[0],\n      ],\n    },\n    {\n      id: 1,\n      name: \"Eleven\",\n      character: characterDeck.drawCards(1)[0],\n      tableau: [],\n      hand: [initialDeck.drawCards(1)[0], initialDeck.drawCards(1)[0]],\n    },\n    {\n      id: 2,\n      name: \"Doug\",\n      character: characterDeck.drawCards(1)[0],\n      tableau: [],\n      hand: [initialDeck.drawCards(1)[0], initialDeck.drawCards(1)[0]],\n    },\n    {\n      id: 3,\n      name: \"Kurt\",\n      character: characterDeck.drawCards(1)[0],\n      tableau: [],\n      hand: [initialDeck.drawCards(1)[0], initialDeck.drawCards(1)[0]],\n    },\n    {\n      id: 4,\n      name: \"Velcro\",\n      character: characterDeck.drawCards(1)[0],\n      tableau: [],\n      hand: [initialDeck.drawCards(1)[0], initialDeck.drawCards(1)[0]],\n    },\n  ],\n  deck = initialDeck;\n\nexport const emptyCard = { id: \"\", fileName: \"\", house: \"\", name: \"\" };\n\nexport { initialDeck, characterDeck };\n","import React, { Component } from \"react\";\nimport Character from \"./character\";\nimport Card from \"./card\";\nimport { emptyCard } from \"../javascripts/card-setup\";\nimport \"../stylesheets/players.css\";\n\nclass Player extends Component {\n  state = {};\n  checkDistance = (rangeOverride) => {\n    // Dead players can’t have cards to worry about\n    if (this.props.player.character.health === 0) return false;\n\n    // Filter players by whether or not they’re alive\n    const players = this.props.players.filter((p) => p.character.health > 0),\n      activePlayer = players.filter((p) => p.id === this.props.player_id)[0],\n      thisIndex = players.findIndex((p) => p.id === this.props.player.id);\n\n    let range = 1;\n\n    //Range override for things that are always a distance of 1\n    if (rangeOverride) range = rangeOverride;\n\n    //Check player's range of attack\n    for (let i = 0; i < activePlayer.tableau.length; i++) {\n      //Check for polyjuice potions\n      if (activePlayer.tableau[i].power?.distance !== undefined) {\n        let distance = activePlayer.tableau[i].power.distance;\n        range += distance > 0 ? 0 : -distance;\n      }\n\n      if (rangeOverride) continue;\n\n      //Count wands only when range isn't overridden.\n      if (activePlayer.tableau[i].power?.range !== undefined)\n        range += activePlayer.tableau[i].power.range - 1;\n    }\n\n    // Lupin is always one closer\n    if (activePlayer.character.fileName === \"remus_lupin\") range++;\n\n    //check if the opponent has distancing powers\n    for (let i = 0; i < this.props.player.tableau.length; i++) {\n      //Check for brooms\n      if (this.props.player.tableau[i].power?.distance !== undefined) {\n        let distance = this.props.player.tableau[i].power.distance;\n        range -= distance > 0 ? distance : 0;\n      }\n    }\n\n    //Range cannot be less than 0\n    // if (range < 0) range = 0;\n\n    // console.log(\n    //   \"index: \" +\n    //     thisIndex +\n    //     \" range: \" +\n    //     range +\n    //     \" | \" +\n    //     (thisIndex <= range) +\n    //     \" | \" +\n    //     (players.length - thisIndex <= range)\n    // );\n\n    if (thisIndex <= range || players.length - thisIndex <= range) return true;\n    return false;\n  };\n\n  playerClasses = () => {\n    let classes = \"player\";\n    classes += this.props.index === 0 ? \" this-player\" : \" other-player\";\n\n    if (this.props.that.deadPlayers.includes(this.props.player.id)) {\n      classes += \" dead\";\n      if (this.props.player.role !== \"auror\") {\n        classes += \" \" + this.props.player.role.replace(\" \", \"_\");\n      } else {\n        classes += \" auror_\" + Math.ceil(Math.random() * 2);\n      }\n    }\n\n    if (this.props.player.role === \"minister\") classes += \" minister\";\n    if (\n      this.props.player.role === \"death eater\" &&\n      this.props.players[0].character.fileName === \"mad-eye_moody\"\n    )\n      classes += \" death-eater\";\n\n    return classes;\n  };\n\n  handClickable = (card, location) => {\n    // If it’s a ranged card, then check the range\n    if (this.props.targets.includes(\"range\") && !this.checkDistance(1))\n      return false;\n    if (\n      this.props.player.id === this.props.player_id &&\n      this.props.targets.includes(\"my-hand\")\n    )\n      return true;\n    if (\n      this.props.player.id !== this.props.player_id &&\n      this.props.targets.includes(\"hand\")\n    )\n      return true;\n    return false;\n  };\n\n  tableauClickable = (card) => {\n    // You cannot steal or discard an azkaban card\n    if (card.fileName === \"azkaban\") return false;\n\n    // If it’s a ranged card, then check the range\n    if (this.props.targets.includes(\"range\") && !this.checkDistance(1))\n      return false;\n\n    // Check if the targets include my tableau's cards or empty spaces\n    if (this.props.player.id === this.props.player_id) {\n      if (card.fileName !== \"\" && this.props.targets.includes(\"my-tableau\"))\n        return true;\n      if (\n        card.fileName === \"\" &&\n        this.props.targets.includes(\"my-tableau-empty\")\n      )\n        return true;\n    }\n\n    // Check if the targets include other tableau's cards or empty spaces\n    if (this.props.player.id !== this.props.player_id) {\n      if (card.fileName !== \"\" && this.props.targets.includes(\"tableau\"))\n        return true;\n      if (card.fileName === \"\" && this.props.targets.includes(\"tableau-empty\"))\n        return true;\n    }\n    return false;\n  };\n\n  characterClickable = () => {\n    // Dead can’t be attacked\n    if (this.props.player.character.health === 0) return false;\n\n    // If it’s a ranged card, then check the range\n    if (this.props.targets.includes(\"range\") && !this.checkDistance(1))\n      return false;\n\n    if (this.props.targets.includes(\"wand-range\") && !this.checkDistance())\n      return false;\n    if (\n      this.props.player.id === this.props.player_id &&\n      this.props.targets.includes(\"my-character\")\n    )\n      return true;\n    if (\n      this.props.player.id !== this.props.player_id &&\n      this.props.targets.includes(\"characters\")\n    )\n      return true;\n\n    return false;\n  };\n\n  apparate = (index) => {\n    let clickable = false;\n    if (this.props.targets.includes(\"between-characters\")) clickable = true;\n    if (clickable && (index === 0 || index === this.props.players.length - 1))\n      clickable = false;\n    return clickable;\n  };\n\n  render() {\n    const tableau = [...this.props.player.tableau, emptyCard];\n    return (\n      <div className={this.playerClasses()} ref={this.props.innerRef}>\n        <h1 className=\"name-card\">{this.props.player.name}</h1>\n\n        <Character\n          character={this.props.player.character}\n          extraClass={\n            (this.characterClickable() ? \"clickable \" : \"\") +\n            (this.props.that.turnCycle.felix &&\n            this.props.that.turnCycle.felix.some((player) => {\n              if (this.props.that.turn !== this.props.that.player_id)\n                return false;\n              return player.id === this.props.player.id;\n            })\n              ? \"selected \"\n              : \"\")\n          }\n          playCard={\n            this.characterClickable()\n              ? this.props.targets.includes(\"my-tableau-empty\") ||\n                this.props.targets.includes(\"tableau-empty\")\n                ? () => {\n                    this.props.tableauClick(emptyCard, this.props.player);\n                  }\n                : () => {\n                    this.props.characterClick(this.props.player);\n                  }\n              : () => {}\n          }\n        />\n        <div\n          // onClick={() => {\n          //   this.tableauClickable() &&\n          //     this.props.tableauPlay(this.props.player);\n          // }}\n          className=\"tableau\"\n        >\n          {tableau.map((card, i) => (\n            <Card\n              key={i}\n              index={i}\n              extraClass={\n                (this.tableauClickable(card) ? \"clickable \" : \"\") +\n                (this.props.that.turnCycle.cards.some((currentCard) => {\n                  return currentCard.id === card.id;\n                })\n                  ? \"selected \"\n                  : \"\")\n              }\n              player={this.props.player}\n              card={card}\n              playCard={\n                this.tableauClickable(card)\n                  ? () => {\n                      this.props.tableauClick(card, this.props.player);\n                    }\n                  : () => {}\n              }\n            />\n          ))}\n        </div>\n        <div\n          className={\"hand\" + (this.props.that.showCards ? \"\" : \" collapsed\")}\n        >\n          {this.props.player.hand.map((card, i) => (\n            <Card\n              myCard={this.props.player.id === this.props.player_id}\n              key={i}\n              index={i}\n              extraClass={\n                (this.handClickable(card) ? \"clickable \" : \"\") +\n                (this.props.that.turnCycle.cards.some((currentCard) => {\n                  return currentCard.id === card.id;\n                })\n                  ? \"selected \"\n                  : \"\") +\n                (this.props.that.turnCycle[\n                  \"id\" + this.props.player.id\n                ]?.cards.some((currentCard) => {\n                  return currentCard.id === card.id;\n                })\n                  ? \"selected \"\n                  : \"\")\n              }\n              card={card}\n              playCard={\n                this.handClickable(card)\n                  ? () => {\n                      this.props.handClick(card, this.props.player);\n                    }\n                  : () => {}\n              }\n            />\n          ))}\n        </div>\n        <div\n          className={\n            \"between-characters\" +\n            (this.apparate(this.props.index) ? \" hasclickable\" : \"\")\n          }\n        >\n          <div\n            className={\n              \"inner-after\" +\n              (this.apparate(this.props.index) ? \" clickable\" : \"\")\n            }\n            onClick={\n              this.apparate(this.props.index)\n                ? () => {\n                    this.props.apparate(this.props.index);\n                  }\n                : () => {}\n            }\n          ></div>\n        </div>\n      </div>\n    );\n  }\n}\nexport default Player;\n","import React, { Component } from \"react\";\nimport Card from \"./card\";\nimport { drawFunctions } from \"../javascripts/event-functions\";\n\nclass CardDeck extends Component {\n  myTurn = () => {\n    return !this.props.players[0][\"my-turn\"];\n  };\n  myEvent = () => {\n    return (\n      this.props.events[0] &&\n      this.props.events[0]?.cardType !== \"resolution\" &&\n      !this.props.events[0]?.target.includes(this.props.player_id)\n    );\n  };\n  isDrawClickable = () => {\n    if (this.props.targets.includes(\"draw\")) return true;\n    return false;\n  };\n  isDiscardClickable = () => {\n    if (this.props.targets.includes(\"discard\")) return true;\n    return false;\n  };\n\n  // playFuction = () => {\n  //   if (this.isDrawClickable()) {\n  //     if (this.props.players[0][\"my-turn\"] === \"azkaban\") {\n  //       this.props.azkaban();\n  //     } else if (\n  //       this.props.events[0] &&\n  //       drawFunctions[this.props.events[0].cardType] !== undefined\n  //     ) {\n  //       this.props.eventFunctions(\n  //         this.props.players[0],\n  //         \"draw\",\n  //         this.props.events[0].cardType\n  //       );\n  //     } else {\n  //       this.props.drawCard(\"draw\");\n  //     }\n  //   }\n  // };\n\n  render() {\n    return (\n      <div className=\"piles\">\n        <Card\n          playCard={\n            this.isDrawClickable()\n              ? () => {\n                  this.props.deckClick(\"draw\");\n                }\n              : () => {}\n          }\n          extraClass={\n            (this.props.deck.cards[0] ? \"draw\" : \"\") +\n            (this.isDrawClickable() ? \" clickable\" : \"\")\n          }\n          card={\n            this.props.deck.cards[0] || { name: \"\", fileName: \"\", house: \"\" }\n          }\n        />\n        <Card\n          playCard={\n            this.isDiscardClickable()\n              ? () => {\n                  this.props.deckClick(\"discard\");\n                }\n              : () => {}\n          }\n          extraClass={\n            \"discard \" + (this.isDiscardClickable() ? \"clickable\" : \"\")\n          }\n          card={\n            this.props.deck.discards[0] || {\n              name: \"\",\n              fileName: \"\",\n              house: \"\",\n            }\n          }\n        />\n      </div>\n    );\n  }\n}\n\nexport default CardDeck;\n","function titleCase(str) {\n  str = str.toLowerCase().split(\" \");\n  for (var i = 0; i < str.length; i++) {\n    str[i] = str[i].charAt(0).toUpperCase() + str[i].slice(1);\n  }\n  return str.join(\" \");\n}\n\nfunction cardsInclude(cards, findCard) {\n  return cards.some((card) => card.id === findCard.id);\n}\n\nfunction cardsIncludeName(cards, name) {\n  return cards.some((card) => card.name === name);\n}\n\nfunction cardIndex(cards, findCard) {\n  if (findCard.length !== undefined) {\n    return cards.findIndex((card) => findCard.some((fc) => card.id === fc.id));\n  }\n  return cards.findIndex((card) => card.id === findCard.id);\n}\n\nfunction cardsIndexName(cards, name) {\n  return cards.findIndex((card) => card.name === name);\n}\n\nfunction playerIndex(players, id) {\n  return players.findIndex((player) => player.id === id);\n}\n\nexport const eventIndex = (events, message) => {\n  return events.findIndex((event) => event.popup.message.includes(message));\n};\n\nconst popUp = (data, that) => {\n  let actions = false;\n  if (data.events && data.events[0]) {\n    if (\n      data.events[0].target.includes(that.state.player_id) &&\n      data.events[0].popup\n    ) {\n      actions = data.events[0].popup;\n    } else if (data.events[0][\"bystanders-\" + that.state.player_id]) {\n      actions = data.events[0][\"bystanders-\" + that.state.player_id];\n    } else if (data.events[0].bystanders) {\n      actions = data.events[0].bystanders;\n    }\n  } else if (data.events !== undefined) {\n    actions = { message: \"\", options: [] };\n  }\n\n  return actions;\n};\n\nfunction resolutionEvent(message, targets, bystanders) {\n  let event = {\n    popup: {\n      message: message,\n      popupType: \"resolution\",\n      options: [],\n    },\n    cardType: \"resolution\",\n    target: targets,\n  };\n\n  if (bystanders)\n    event.bystanders = {\n      message: bystanders,\n      popupType: \"resolution\",\n      options: [],\n    };\n\n  return event;\n}\n\nfunction deathEvent(message, target, options, bystanders) {\n  let event = {\n    popup: {\n      message: message,\n      popupType: \"subtle\",\n      options: options,\n    },\n    cardType: target.character.fileName,\n    target: [target.id],\n  };\n\n  if (bystanders)\n    event.bystanders = {\n      message: bystanders,\n      popupType: \"subtle\",\n      options: [],\n    };\n\n  return event;\n}\n\nfunction deathCheck(players, deadPlayers) {\n  const newlyDead = [];\n  players.forEach((player) => {\n    // If the player is dead, but not yet registered as dead i.e. \"newly dead\"\n    if (player.character.health === 0 && !deadPlayers.includes(player.id)) {\n      newlyDead.push(player.id);\n    }\n  });\n  return newlyDead;\n}\n\nconst tableauProblems = (tableau) => {\n  const wands = [\n    \"larch_wand\",\n    \"yew_wand\",\n    \"aspen_wand\",\n    \"holly_wand\",\n    \"elder_wand\",\n  ];\n  let cardnames = [],\n    wandCount = 0,\n    alert = false;\n\n  for (let i = 0; i < tableau.length; i++) {\n    if (wands.includes(tableau[i].name)) wandCount++;\n    if (wandCount > 1)\n      return \"You can only have one wand! Discard your current wand first.\";\n    if (cardnames.includes(tableau[i].name)) {\n      if (tableau[i].name === \"azkaban\") return \"They are already in Azkaban!\";\n      return (\n        \"You can only have one \" +\n        titleCase(tableau[i].name.replace(\"_\", \" \")) +\n        \" Discard your current one first.\"\n      );\n    }\n    cardnames.push(tableau[i].name);\n  }\n\n  tableau.forEach((card) => {});\n\n  return alert;\n};\n\nexport {\n  titleCase,\n  cardsInclude,\n  cardIndex,\n  cardsIncludeName,\n  cardsIndexName,\n  playerIndex,\n  popUp,\n  resolutionEvent,\n  deathEvent,\n  deathCheck,\n  tableauProblems,\n};\n","import { Deck } from \"../../javascripts/deck\";\n\nconst contains = (tableau, items) => {\n  if (tableau.some((item) => items.includes(item.name))) {\n    for (let i = 0; i < tableau.length; i++) {\n      if (items.includes(tableau[i].name)) return i;\n    }\n  }\n\n  return -1;\n};\n\nfunction titleCase(str) {\n  str = str.toLowerCase().split(\" \");\n  for (var i = 0; i < str.length; i++) {\n    str[i] = str[i].charAt(0).toUpperCase() + str[i].slice(1);\n  }\n  return str.join(\" \");\n}\n\nexport const resolveEvent = (that, key) => {\n  let targets = [...that.state.turnOrder];\n  // for (let i = 0; i < that.state.players.length; i++) {\n  //   targets.push(i);\n  // }\n  console.log(key);\n  console.log(that.events);\n\n  switch (key) {\n    case \"stupefy\":\n      return {\n        popup: {\n          message: that.resolutionText || \"\",\n          popupType: \"resolution\",\n          options: [],\n        },\n        cardType: \"resolution\",\n        target: targets,\n      };\n    case \"diagon_alley\":\n      return {\n        popup: {\n          message: \"Everyone‘s taken their card.\",\n          popupType: \"resolution\",\n          options: [],\n        },\n        cardType: \"resolution\",\n        target: targets,\n      };\n    case \"garroting_gas\":\n      return {\n        popup: {\n          message: \"The Garroting Gas has cleared!\",\n          popupType: \"resolution\",\n          options: [],\n        },\n        cardType: \"resolution\",\n        target: targets,\n      };\n    case \"dementors\":\n      return {\n        popup: {\n          message: \"The Dementors are gone!\",\n          popupType: \"resolution\",\n          options: [],\n        },\n        cardType: \"resolution\",\n        target: targets,\n      };\n\n    default:\n      return false;\n  }\n};\n","import { Deck } from \"../../javascripts/deck\";\nimport { playerIndex } from \"../utils/tools\";\nimport cloneDeep from \"lodash/cloneDeep\";\nimport { clearTable } from \"../utils/clear-table\";\n\nexport const endTurn = (that) => {\n  const players = cloneDeep(that.state.players),\n    currentIndex = playerIndex(players, that.state.turn),\n    player = players[currentIndex];\n\n  let change = {};\n\n  //If player ends their turn in Jail, they're now free!\n  if (player.tableau.some((e) => e.name === \"azkaban\")) {\n    const jailLocation = player.tableau.findIndex((e) => e.name === \"azkaban\"),\n      deck = new Deck(\n        [...that.state.deck.cards],\n        [...that.state.deck.discards]\n      );\n\n    deck.serveCard(player.tableau.splice(jailLocation, 1)[0]);\n    change = { players, deck };\n  }\n\n  const clear = clearTable(that, change.deck);\n\n  if (clear) {\n    change = Object.assign(change, clear);\n  }\n\n  if (player.hand.length > player.character.health) {\n    that.addAlert(\n      \"You must discard until you have at most the same number of cards as you do health\"\n    );\n    return false;\n  } else {\n    return change;\n  }\n};\n","import { Deck } from \"../../javascripts/deck\";\nimport { playerIndex } from \"../utils/tools\";\nimport cloneDeep from \"lodash/cloneDeep\";\n\nexport const clearTable = (that, given_deck, number) => {\n  const table = cloneDeep(that.state.table);\n\n  if (table.length === 0) return false;\n  const deck = given_deck\n    ? new Deck(given_deck.cards, given_deck.discards)\n    : new Deck(that.state.deck.cards, that.state.deck.discards);\n\n  let event = {};\n\n  if (number === undefined) number = table.length;\n  for (let i = number; i > 0; i--) {\n    deck.serveCard(table.splice(table.length - 1, 1)[0]);\n  }\n\n  event.table = table;\n  event.deck = deck;\n\n  return event;\n};\n","import { playerIndex, cardsIncludeName } from \"../utils/tools\";\n\nexport const setupCycle = (that, turn) => {\n  if (that.state.turnCycle.phase === \"unset\") return that.state.turnCycle;\n  let turnCycle = {\n      action: \"\",\n      cards: [],\n      felix: [],\n      draw: 2,\n      hotseat: -1,\n      phase: \"initial\",\n      shots: 1,\n      used: [],\n    },\n    returnState = {};\n\n  console.log(turn);\n\n  const players = that.state.players,\n    this_player = players[playerIndex(players, turn)];\n\n  players.forEach((player) => {\n    turnCycle[\"id\" + player.id] = { cards: [] };\n  });\n\n  if (\n    cardsIncludeName(this_player.tableau, \"elder_wand\") ||\n    this_player.character.fileName === \"sirius_black\"\n  ) {\n    turnCycle.shots = 9999;\n  }\n\n  if (cardsIncludeName(this_player.tableau, \"azkaban\")) {\n    // If the player is in Azkaban start an\n    // Azkaban event.\n    turnCycle.phase = \"azkaban\";\n    const events = [\n      {\n        popup: {\n          message: \"You’re in Azkaban! Draw a card to see if you get out\",\n          options: [],\n          popupType: \"subtle\",\n        },\n        bystanders: {\n          popupType: \"subtle\",\n          message:\n            this_player.character.shortName +\n            \" is in Azkaban! They must draw to see if they get out.\",\n          options: [],\n        },\n        instigator: this_player,\n        cardType: \"azkaban\",\n        target: [turn],\n      },\n    ];\n\n    returnState.events = events;\n  }\n\n  returnState.turnCycle = turnCycle;\n\n  return returnState;\n};\n","import { playerIndex, cardsIncludeName } from \"../utils/tools\";\n\nexport const cycleCleanse = (given_turnCycle, that) => {\n  given_turnCycle.action = \"\";\n  given_turnCycle.cards = [];\n  given_turnCycle.felix = [];\n  given_turnCycle.hotseat = -1;\n  given_turnCycle.phase = \"initial\";\n\n  const players = that.state.players,\n    this_player = players[playerIndex(players, that.state.turn)];\n\n  players.forEach((player) => {\n    given_turnCycle[\"id\" + player.id] = { choice: \"\", cards: [] };\n  });\n\n  if (\n    cardsIncludeName(this_player.tableau, \"elder_wand\") ||\n    this_player.character.fileName === \"sirius_black\"\n  ) {\n    given_turnCycle.shots = 9999;\n  }\n\n  return given_turnCycle;\n};\n","import { Deck } from \"../../javascripts/deck\";\nimport { cardIndex } from \"./tools\";\nexport const discard = (player, deck, cards) => {\n  for (let i = 0; i < cards.length; i++) {\n    let location = \"hand\",\n      thisIndex = cardIndex(player.hand, cards[i]);\n\n    if (thisIndex === -1) {\n      location = \"tableau\";\n      thisIndex = cardIndex(player.tableau, cards[i]);\n    }\n\n    deck.serveCards(player[location].splice(thisIndex, 1));\n  }\n};\n","import { playerIndex } from \"../../utils/tools\";\nimport { discard } from \"../discard-cards\";\nimport { Deck } from \"../../../javascripts/deck\";\nimport { cloneDeep } from \"lodash\";\n\nexport const discardSelected = (that, turnCycle) => {\n  const players = cloneDeep(that.state.players),\n    player = players[playerIndex(players, that.state.turn)],\n    deck = new Deck([...that.state.deck.cards], [...that.state.deck.discards]);\n\n  if (turnCycle === undefined) turnCycle = cloneDeep(that.state.turnCycle);\n\n  discard(player, deck, turnCycle.cards);\n\n  return { players, deck };\n};\n","export const countAllCards = (that) => {\n  let count = [...that.state.deck.cards, ...that.state.deck.discards];\n\n  that.state.players.forEach((player) => {\n    count.push(...player.hand);\n    count.push(...player.tableau);\n  });\n\n  let length = count.length;\n\n  let unique = [],\n    catcher = [];\n\n  count.forEach((card) => {\n    if (!unique.includes(card.id)) {\n      unique.push(card.id);\n    } else {\n      catcher.push(card.id);\n    }\n  });\n\n  let duplicates = length - unique.length;\n\n  return { length: length, duplicates: duplicates, catcher: catcher };\n};\n","import { endTurn } from \"./end-turn\";\nimport { clearTable } from \"./clear-table\";\nimport { setupCycle } from \"./setup-cycle\";\nimport { cycleBeginning } from \"./cycle-beginning\";\nimport { cycleCleanse } from \"./cycle-cleanse\";\nimport { discard } from \"./discard-cards\";\nimport { discardSelected } from \"./turn-tools/discard-selected\";\nimport { countAllCards } from \"./turn-tools/count-cards\";\nimport { universalOrder } from \"./turn-tools/universal-order\";\nimport { getNextTurn } from \"./turn-tools/get-next-turn\";\n\nexport const incrementTurn = (current_turn, turn_order, dead_players) => {\n  console.log(current_turn, turn_order, dead_players);\n  let turn = current_turn,\n    turnIndex = turn_order.indexOf(turn);\n  turnIndex++;\n  if (turnIndex >= turn_order.length) turnIndex = 0;\n\n  while (dead_players.includes(turn_order[turnIndex])) {\n    turnIndex++;\n    if (turnIndex >= turn_order.length) turnIndex = 0;\n  }\n\n  turn = turn_order[turnIndex];\n\n  return turn;\n};\n\nexport {\n  endTurn,\n  clearTable,\n  setupCycle,\n  cycleBeginning,\n  cycleCleanse,\n  discard,\n  discardSelected,\n  countAllCards,\n  universalOrder,\n  getNextTurn,\n};\n","import { Deck } from \"../../../javascripts/deck\";\nimport { playerIndex } from \"../../utils/tools\";\nimport { discard } from \"../../utils/discard-cards\";\nimport cloneDeep from \"lodash/cloneDeep\";\n\nconst isProtego = (character, cardname) => {\n  switch (character) {\n    case \"luna_lovegood\":\n      return true;\n    case \"ginny_weasley\":\n      if (cardname === \"stupefy\" || cardname === \"protego\") return true;\n    default:\n      if (cardname === \"protego\") return true;\n  }\n\n  return false;\n};\n\nexport const playProtego = (that) => {\n  if (!that.state.turnCycle[\"id\" + that.state.player_id]?.cards[0]) {\n    that.addAlert(\"Choose a protego card first!\");\n  } else {\n    const deck = new Deck(\n        [...that.state.deck.cards],\n        [...that.state.deck.discards]\n      ),\n      players = cloneDeep(that.state.players),\n      player = players[playerIndex(players, that.state.player_id)],\n      cards = that.state.turnCycle[\"id\" + that.state.player_id].cards;\n\n    let cardValidation = false,\n      alert = \"Wahoo!\";\n\n    if (cards.length > 2) {\n    } else if (cards.length === 2) {\n      // If there is more than one card selected\n\n      //If the attacker is Bellatrix you need two cards!\n      if (\n        that.state.events[0].instigator.character.name === \"bellatrix_lestrange\"\n      ) {\n        // Check if all the cards are protego cards\n        if (\n          !cards.reduce((out, card) => {\n            let final = out || true;\n            if (typeof final !== \"boolean\")\n              final = isProtego(player.character, final.name);\n            return final === isProtego(player.character, final.name);\n          })\n        ) {\n          //they played invalid cards\n          cardValidation = false;\n          alert = \"Both cards must be (or work as) protego cards!\";\n        } else {\n          //if they playerd two protego cards, they're good!\n          cardValidation = true;\n        }\n      } else {\n        cardValidation = false;\n        alert = \"You only need to play one card!\";\n      }\n    } else {\n      // If there is only one card selected\n      if (isProtego(player.character, cards[0]?.name)) {\n        cardValidation = true;\n      } else {\n        // See if players have special powers to help\n        alert = \"You must play a card that works as a protego charm!\";\n      }\n    }\n\n    if (!cardValidation) {\n      that.addAlert(alert);\n      return false;\n    }\n\n    if (cardValidation) {\n      discard(player, deck, cards);\n      return { state: { players, deck }, resolve: true };\n    }\n  }\n};\n","import { playerIndex } from \"../../utils/tools\";\nimport cloneDeep from \"lodash/cloneDeep\";\n\nexport const takeHit = (that) => {\n  const players = cloneDeep(that.state.players),\n    thatIndex = playerIndex(players, that.state.player_id);\n\n  players[thatIndex].character.health--;\n\n  return { state: { players }, resolve: true };\n};\n","import { Deck } from \"../../javascripts/deck\";\n\nexport const checkTopCard = (house, this_deck) => {\n  const deck = new Deck([...this_deck.cards], [...this_deck.discards]),\n    houses = {\n      G: \"Griffindor\",\n      S: \"Slytherine\",\n      H: \"Hufflepuff\",\n      R: \"Ravenclaw\",\n    };\n\n  deck.serveCard(deck.drawCard());\n\n  let gotit = false,\n    checked = houses[deck.discards[0].house];\n\n  house.forEach((h) => {\n    if (deck.discards[0].house === h) {\n      gotit = true;\n      checked = houses[h];\n    }\n  });\n\n  return { gotit: gotit, house: checked, deck };\n};\n","import { checkTopCard } from \"../../utils/checkTopCard\";\nimport { playerIndex } from \"../../utils/tools\";\nimport cloneDeep from \"lodash/cloneDeep\";\n\nexport const houseHide = (that, index) => {\n  const players = [...that.state.players],\n    thisPlayer = players[playerIndex(players, that.state.player_id)];\n\n  let house = thisPlayer.character.house,\n    oneBefore = that.state.turnOrder.indexOf(that.state.player_id) - 1;\n\n  // Make sure the character has a house to be drawing for\n  if (oneBefore < 0) oneBefore += that.state.turnOrder.length;\n  if (house === \"\")\n    house =\n      that.state.players[that.findMe(that.state.turnOrder[oneBefore])].character\n        .house;\n\n  if (house === \"\") house = \"H\";\n\n  const events = cloneDeep(that.state.events),\n    options = events[0].popup.options,\n    topCard = checkTopCard([house], that.state.deck, that.state.table);\n\n  if (topCard.gotit) {\n    that.addAlert(\n      \"Hooray! You drew a \" + topCard.house + \", and the spell missed\"\n    );\n    return { state: { deck: topCard.deck }, resolve: true };\n  } else {\n    options.splice(index, 1);\n    that.addAlert(\"Bummer! You drew a \" + topCard.house + \".\");\n    return { state: { events, deck: topCard.deck }, resolve: false };\n  }\n};\n","import { discardSelected } from \"../utils/turn-tools\";\nimport { playProtego } from \"./spells/protego\";\nimport { takeHit } from \"./spells/takeHit\";\nimport { houseHide } from \"./spells/houseHide\";\nimport { invisibilityCloak } from \"./spells/invisibilityCloak\";\nimport { protegoOptions } from \"../utils/character-events\";\nimport { playerIndex, resolutionEvent } from \"../utils/tools\";\nimport cloneDeep from \"lodash/cloneDeep\";\n\nexport const stupefy = {\n  primary: (subject, that, turnCycle) => {\n    // Discard the selected card\n    const state = discardSelected(that, turnCycle),\n      instigator = state.players[playerIndex(state.players, that.state.turn)];\n\n    // Each player is only allowed one Stupefy per turn\n    turnCycle.shots--;\n\n    // The base response options\n    let popupOptions = [\n      { label: \"Take a hit\", function: \"takeHit\" },\n      { label: \"Play Protego\", function: \"playProtego\" },\n    ];\n\n    // Get special case resonses\n    popupOptions = protegoOptions(subject, popupOptions);\n\n    // Setup the event\n    const events = [\n      {\n        popup: {\n          message:\n            instigator.character.shortName + \" has fired a stupefy at you!\",\n          options: [...popupOptions],\n        },\n        instigator: instigator,\n        cardType: \"stupefy\",\n        target: [subject.id],\n        bystanders: {\n          message:\n            instigator.character.shortName +\n            \" has fired a stupefy at \" +\n            subject.character.shortName +\n            \"!\",\n          options: [],\n          popupType: \"subtle\",\n        },\n        [\"bystanders\" + instigator.id]: {\n          message:\n            \"You have fired a stupefy at \" + subject.character.shortName + \"!\",\n          options: [],\n          popupType: \"subtle\",\n        },\n      },\n    ];\n\n    // Return the state\n    return {\n      state: { events, players: state.players, deck: state.deck },\n      resolve: false,\n    };\n  },\n  takeHit: takeHit,\n  playProtego: playProtego,\n  houseHide: houseHide,\n  invisibilityHide: invisibilityCloak,\n  clearEvent: () => {\n    console.log(\"Woosh!\");\n    return { state: {}, resolve: true };\n  },\n  resolution: (that, lastAction) => {\n    const instigator =\n        that.state.players[playerIndex(that.state.players, that.state.turn)],\n      subject =\n        that.state.players[\n          playerIndex(that.state.players, that.state.turnCycle.hotseat)\n        ];\n\n    let personalText = \"\";\n    let eventText = \"\";\n\n    switch (lastAction) {\n      case \"houseHide\":\n        personalText = \"You have successfully hidden and the spell missed\";\n        eventText =\n          subject.character.shortName +\n          \" has hidden in their vanishing cabinet and \" +\n          instigator.character.shortName +\n          \"’s stupefy missed.\";\n        break;\n      case \"takeHit\":\n        personalText = \"You have taken a hit!\";\n        eventText =\n          subject.character.shortName +\n          \" has been hit by \" +\n          instigator.character.shortName +\n          \"’s stupefy.\";\n        break;\n      case \"playProtego\":\n        personalText = \"You have successfully cast a protego\";\n        eventText =\n          subject.character.shortName +\n          \" used a Protego charm and blocked \" +\n          instigator.character.shortName +\n          \"’s Stupefy.\";\n        break;\n      case \"invisibilityHide\":\n        personalText = \"You have successfully hidden and the spell missed\";\n        eventText =\n          subject.character.shortName +\n          \" has hidden in their invisibility cloak and \" +\n          instigator.character.shortName +\n          \"’s stupefy missed.\";\n        break;\n      case \"clearEvent\":\n        personalText = \"The spell missed\";\n        eventText =\n          subject.character.shortName +\n          \" is untouchable and \" +\n          instigator.character.shortName +\n          \"’s stupefy missed.\";\n        break;\n      default:\n        break;\n    }\n\n    return { event: resolutionEvent(personalText, [subject.id], eventText) };\n  },\n};\n","export const protegoOptions = (player, currentOptions) => {\n  let tableau = [],\n    popupOptions = [...currentOptions];\n\n  if (popupOptions.length > 2) return popupOptions;\n\n  for (let i = 0; i < player.tableau.length; i++) {\n    tableau.push(player.tableau[i].name);\n  }\n\n  if (player.power.includes(\"mundungus_fletcher\"))\n    popupOptions.push({\n      label: \"Try to hide as Mundungus\",\n      function: \"houseHide\",\n    });\n\n  if (tableau.includes(\"vanishing_cabinet\"))\n    popupOptions.push({\n      label: \"Try to hide in your vanishing cabinet!\",\n      function: \"houseHide\",\n    });\n\n  if (tableau.includes(\"invisibility_cloak\"))\n    popupOptions.push({\n      label: \"Try to hide with your invisibility cloak!\",\n      function: \"invisibilityHide\",\n    });\n\n  if (\n    tableau.includes(\"vanishing_cabinet\") &&\n    tableau.includes(\"invisibility_cloak\")\n  )\n    popupOptions = [\n      {\n        label: \"Hide, invisible, in your vanishing cabinet.\",\n        function: \"clearEvent\",\n      },\n    ];\n\n  return popupOptions;\n};\n","import { checkTopCard } from \"../../utils/checkTopCard\";\nimport { playerIndex } from \"../../utils/tools\";\nimport cloneDeep from \"lodash/cloneDeep\";\n\nexport const invisibilityCloak = (that, index) => {\n  const players = [...that.state.players],\n    thisPlayer = players[playerIndex(players, that.state.player_id)];\n\n  let house = thisPlayer.character.house,\n    oneBefore = that.state.turnOrder.indexOf(that.state.player_id) - 1;\n\n  // Make sure the character has a house to be drawing for\n  if (oneBefore < 0) oneBefore += that.state.turnOrder.length;\n  if (house === \"\")\n    house =\n      that.state.players[that.findMe(that.state.turnOrder[oneBefore])].character\n        .house;\n\n  if (house === \"\") house = \"H\";\n\n  const houses = [\"H\", \"S\", \"G\", \"R\"];\n\n  houses.splice(houses.indexOf(house), 1);\n\n  const events = cloneDeep(that.state.events),\n    options = events[0].popup.options,\n    topCard = checkTopCard(houses, that.state.deck, that.state.table);\n\n  if (topCard.gotit) {\n    that.addAlert(\n      \"Hooray! You drew a \" + topCard.house + \", and the spell missed\"\n    );\n    return { state: { deck: topCard.deck }, resolve: true };\n  } else {\n    options.splice(index, 1);\n    that.addAlert(\"Bummer! You drew a \" + topCard.house + \".\");\n    return { state: { events, deck: topCard.deck }, resolve: false };\n  }\n};\n","import {\n  playerIndex,\n  resolutionEvent,\n  cardsInclude,\n  cardIndex,\n  titleCase,\n} from \"../utils/tools\";\nimport { Deck } from \"../../javascripts/deck\";\nimport cloneDeep from \"lodash/cloneDeep\";\n\nexport const expelliarmus = {\n  primary: (given_subject, card, that, turnCycle) => {\n    const players = cloneDeep(that.state.players),\n      subject = players[playerIndex(players, given_subject.id)],\n      instigator = players[playerIndex(players, that.state.player_id)],\n      deck = new Deck(that.state.deck.cards, that.state.deck.discards),\n      hand = cardsInclude(subject.hand, card),\n      events = cloneDeep(that.state.events);\n\n    deck.serveCards(\n      subject[hand ? \"hand\" : \"tableau\"].splice(\n        cardIndex(subject[hand ? \"hand\" : \"tableau\"], card),\n        1\n      )\n    );\n    deck.serveCards(\n      instigator.hand.splice(cardIndex(instigator.hand, turnCycle.cards[0]), 1)\n    );\n\n    let personalText =\n        instigator.character.shortName +\n        \" discarded your \" +\n        titleCase(card.name.replace(\"_\", \" \")) +\n        \".\",\n      eventText =\n        instigator.character.shortName +\n        \" discarded \" +\n        subject.character.shortName +\n        \"’s \" +\n        titleCase(card.name.replace(\"_\", \" \")) +\n        \".\";\n\n    const event = resolutionEvent(personalText, [subject.id], eventText);\n\n    events.push(event);\n\n    return { state: { events, deck, players }, resolve: true };\n  },\n};\n","import {\n  playerIndex,\n  resolutionEvent,\n  cardsInclude,\n  cardIndex,\n  titleCase,\n} from \"../utils/tools\";\nimport { Deck } from \"../../javascripts/deck\";\nimport { discardSelected } from \"../utils/turn-tools\";\nimport cloneDeep from \"lodash/cloneDeep\";\n\nexport const accio = {\n  primary: (given_subject, card, that, turnCycle) => {\n    // Discard the selected card\n    const state = discardSelected(that, turnCycle);\n\n    // Gather info on the stealer and the victim\n    const subject = state.players[playerIndex(state.players, given_subject.id)],\n      instigator =\n        state.players[playerIndex(state.players, that.state.player_id)],\n      // is the card in their hand or on their tableau\n      hand = cardsInclude(subject.hand, card),\n      events = cloneDeep(that.state.events);\n\n    // Steal card\n    instigator.hand.unshift(\n      subject[hand ? \"hand\" : \"tableau\"].splice(\n        cardIndex(subject[hand ? \"hand\" : \"tableau\"], card),\n        1\n      )[0]\n    );\n\n    // Tell everyone what happened\n    let personalText =\n        instigator.character.shortName +\n        \" used a summoning charm to steal your \" +\n        titleCase(card.name.replace(\"_\", \" \")) +\n        \".\",\n      eventText =\n        instigator.character.shortName +\n        \" used a summoning charm to steal \" +\n        (hand ? \" from \" : \"\") +\n        subject.character.shortName +\n        \"’s \" +\n        (hand ? \" hand.\" : titleCase(card.name.replace(\"_\", \" \")) + \".\");\n\n    const event = resolutionEvent(personalText, [subject.id], eventText);\n\n    // Replace the instigators name with 2nd person pronoun for them\n    event[\"bystanders-\" + instigator.id] = {\n      popupType: \"resolution\",\n      message: eventText.replace(instigator.character.shortName, \"You\"),\n      options: [],\n    };\n\n    events.push(event);\n\n    // Return state\n    return {\n      state: { events, deck: state.deck, players: state.players },\n      resolve: true,\n    };\n  },\n};\n","import { playerIndex, resolutionEvent } from \"../utils/tools\";\nimport { discardSelected } from \"../utils/turn-tools\";\nimport cloneDeep from \"lodash/cloneDeep\";\n\nexport const butterbeer = {\n  primary: (given_subject, that, turnCycle) => {\n    // Discard the selected card\n    const state = discardSelected(that, turnCycle),\n      subject = state.players[playerIndex(state.players, given_subject.id)],\n      events = cloneDeep(that.state.events);\n\n    // If the character is at max health. Abort, and don't merge\n    // the modified state\n    if (subject.character.health >= subject.character.maxHealth) {\n      that.addAlert(\"You’re already at max health!\");\n      return false;\n    }\n\n    // Heal the player by one\n    subject.character.health++;\n\n    // If they’re Hagrid, they get healed for two\n    if (\n      subject.power.includes(\"rubeus_hagrid\") &&\n      subject.character.health >= subject.character.maxHealth\n    )\n      subject.character.health++;\n\n    // Let everyone know what happened\n    let personalText = \"You drank butterbeer and were healed for 1 point!\",\n      eventText =\n        subject.character.shortName +\n        \" drank butterbeer and was healed for 1 point!\";\n\n    // set the event\n    const event = resolutionEvent(personalText, [subject.id], eventText);\n\n    // Add it to current events\n    events.push(event);\n\n    // Return the state\n    return {\n      state: { events, players: state.players, deck: state.deck },\n      resolve: true,\n    };\n  },\n};\n","import { Deck } from \"../../../javascripts/deck\";\nimport { playerIndex } from \"../../utils/tools\";\nimport { discard } from \"../../utils/discard-cards\";\nimport cloneDeep from \"lodash/cloneDeep\";\n\nconst isStupefy = (character, cards) => {\n  if (cards.length > 1) {\n    return { success: false, alert: \"choose only one card!\" };\n  }\n\n  switch (character) {\n    case \"ginny_weasley\":\n      if (cards[0].name === \"stupefy\" || cards[0].name === \"protego\")\n        return { success: true, alert: \"\" };\n    default:\n      if (cards[0].name === \"stupefy\") return { success: true, alert: \"\" };\n  }\n\n  return { success: false, alert: \"You must choose a stupefy card!\" };\n};\n\nexport const playStupefy = (that) => {\n  const players = cloneDeep(that.state.players),\n    target = players[playerIndex(players, that.state.player_id)],\n    deck = new Deck([...that.state.deck.cards], [...that.state.deck.discards]),\n    cards = that.state.turnCycle[\"id\" + that.state.player_id].cards;\n\n  if (!cards[0]) {\n    that.addAlert(\"Choose a stupefy card first!\");\n  } else {\n    let status = isStupefy(target.character.name, cards);\n\n    if (status.success) {\n      discard(target, deck, cards);\n      return { state: { players, deck }, resolve: true };\n    } else {\n      that.addAlert(status.alert);\n    }\n  }\n  return false;\n};\n","import { discardSelected } from \"../utils/turn-tools\";\nimport { takeHit } from \"./spells/takeHit\";\nimport { playStupefy } from \"./spells/stupefy\";\nimport { playerIndex, resolutionEvent, cardsIncludeName } from \"../utils/tools\";\n\nexport const dementors = {\n  primary: (card, that, turnCycle) => {\n    // Discard the selected card\n    const state = discardSelected(that, turnCycle),\n      instigator = state.players[playerIndex(state.players, that.state.turn)];\n\n    // Figure out who is immune from the attack\n    // and who isn’t\n    let targets = [];\n\n    that.state.players.forEach((player, i) => {\n      if (player.id === instigator.id) return;\n      if (that.state.deadPlayers.includes(player.id)) return;\n      if (!cardsIncludeName(player.tableau, \"expecto_patronum\")) {\n        targets.push(player.id);\n      }\n    });\n\n    const dementorEvent = {\n      popup: {\n        message: \"Dementors attack! Play a Stupefy card to fight them off!\",\n        options: [\n          {\n            label: \"Take a hit\",\n            function: \"takeHit\",\n          },\n          {\n            label: \"Play a stupefy\",\n            function: \"playStupefy\",\n          },\n        ],\n      },\n      bystanders: {\n        popupType: \"subtle\",\n        message: \"Whoosh, you’re past the Dementors now!\",\n        options: [],\n      },\n      instigator: instigator,\n      cardType: \"dementors\",\n      target: [...targets],\n    };\n\n    // Set the turn phase\n    turnCycle.phase = \"attack\";\n\n    const events = [...that.state.events];\n    events.push(dementorEvent);\n    return {\n      state: { events, players: state.players, deck: state.deck },\n      resolve: false,\n    };\n  },\n  takeHit: takeHit,\n  playStupefy: playStupefy,\n  resolution: (that, lastAction) => {\n    const instigator =\n        that.state.players[playerIndex(that.state.players, that.state.turn)],\n      subject =\n        that.state.players[\n          playerIndex(that.state.players, that.state.player_id)\n        ];\n\n    // Find out who all got hurt\n    const damaged = [];\n\n    that.state.players.forEach((player) => {\n      console.log(that.state.turnCycle[\"id\" + player.id]);\n      if (that.state.turnCycle[\"id\" + player.id]?.choice === \"takeHit\")\n        damaged.push(player.character.shortName);\n    });\n\n    let message = \"The Dementors have past. \";\n\n    console.log(damaged);\n\n    if (damaged.length === 1) {\n      message += damaged[0] + \" took damage.\";\n    } else if (damaged.length === 2) {\n      message += damaged[0] + \" and \" + damaged[0] + \" both took damage.\";\n    } else if (damaged.length > 2) {\n      message +=\n        damaged.slice(0, -1).join(\", \") +\n        \", and \" +\n        damaged.slice(-1) +\n        \" all took damage.\";\n    }\n    return { event: resolutionEvent(message, [subject.id], message) };\n  },\n};\n","import { discardSelected } from \"../utils/turn-tools\";\nimport { takeHit } from \"./spells/takeHit\";\nimport { playProtego } from \"./spells/protego\";\nimport { playerIndex, resolutionEvent, cardsIncludeName } from \"../utils/tools\";\n\nexport const garroting_gas = {\n  primary: (card, that, turnCycle) => {\n    // Discard the selected card\n    const state = discardSelected(that, turnCycle),\n      instigator = state.players[playerIndex(state.players, that.state.turn)];\n\n    // Figure out who is immune from the attack\n    // and who isn’t\n    let targets = [];\n\n    // Add everyone who's not dead to the event\n    that.state.players.forEach((player, i) => {\n      if (that.state.deadPlayers.includes(player.id)) return;\n      targets.push(player.id);\n    });\n\n    const gasEvent = {\n      popup: {\n        message: \"Garrotting Gas! Play a Protego card to protect yourself!\",\n        options: [\n          {\n            label: \"Take a hit\",\n            function: \"takeHit\",\n          },\n          {\n            label: \"Cast Protego\",\n            function: \"playProtego\",\n          },\n        ],\n      },\n      bystanders: {\n        popupType: \"subtle\",\n        message: \"Whoosh, you’re safe now!\",\n        options: [],\n      },\n      instigator: instigator,\n      cardType: \"garroting_gas\",\n      target: [...targets],\n    };\n\n    // Set the turn phase\n    turnCycle.phase = \"attack\";\n\n    const events = [...that.state.events];\n    events.push(gasEvent);\n\n    return {\n      state: { events, players: state.players, deck: state.deck },\n      resolve: false,\n    };\n  },\n  takeHit: takeHit,\n  playProtego: playProtego,\n  resolution: (that, lastAction) => {\n    const instigator =\n        that.state.players[playerIndex(that.state.players, that.state.turn)],\n      subject =\n        that.state.players[\n          playerIndex(that.state.players, that.state.player_id)\n        ];\n\n    // Find out who all got hurt\n    const damaged = [];\n\n    that.state.players.forEach((player) => {\n      console.log(that.state.turnCycle[\"id\" + player.id]);\n      if (that.state.turnCycle[\"id\" + player.id]?.choice === \"takeHit\")\n        damaged.push(player.character.shortName);\n    });\n\n    let message = \"The gas is cleared. \";\n\n    console.log(damaged);\n\n    if (damaged.length === 1) {\n      message += damaged[0] + \" took damage.\";\n    } else if (damaged.length === 2) {\n      message += damaged[0] + \" and \" + damaged[0] + \" both took damage.\";\n    } else if (damaged.length > 2) {\n      message +=\n        damaged.slice(0, -1).join(\", \") +\n        \", and \" +\n        damaged.slice(-1) +\n        \" all took damage.\";\n    }\n    return { event: resolutionEvent(message, [subject.id], message) };\n  },\n};\n","import { playerIndex, resolutionEvent, cardIndex } from \"../utils/tools\";\nimport { discardSelected } from \"../utils/turn-tools\";\nimport { Deck } from \"../../javascripts/deck\";\n\nexport const honeydukes = {\n  primary: (card, that, turnCycle) => {\n    // Discard the selected card\n    const state = discardSelected(that, turnCycle),\n      player = state.players[playerIndex(state.players, that.state.player_id)];\n\n    // Give the player the power to draw two more cards\n    // (Note, since we already have a copied version of turnCycle, which\n    // will not effect the original if we return false from here we don't\n    // need to copy it again or give it back in the returned object).\n    turnCycle.draw += 2;\n\n    // Set the resolution message\n    let personalText =\n        \"You have played Honeydukes and get to draw two more cards\",\n      eventText =\n        player.character.shortName +\n        \"has played Honeydukes and gets to draw two more cards\";\n    const events = [resolutionEvent(personalText, [player.id], eventText)];\n\n    // Return the state\n    return {\n      state: { players: state.players, deck: state.deck, events },\n      resolve: true,\n    };\n  },\n};\n","import { playerIndex, resolutionEvent, cardIndex } from \"../utils/tools\";\nimport { discardSelected } from \"../utils/turn-tools\";\nimport { Deck } from \"../../javascripts/deck\";\n\nexport const weasleys_wizard_weezes = {\n  primary: (card, that, turnCycle) => {\n    // Discard the selected card\n    const state = discardSelected(that, turnCycle),\n      player = state.players[playerIndex(state.players, that.state.player_id)];\n\n    // Give the player the power to draw two more cards\n    // (Note, since we already have a copied version of turnCycle, which\n    // will not effect the original if we return false from here we don't\n    // need to copy it again or give it back in the returned object).\n    turnCycle.draw += 3;\n\n    // Set the resolution message\n    let personalText =\n        \"You have played Weasleys’ Wizard Weezes and get to draw three more cards!\",\n      eventText =\n        player.character.shortName +\n        \"has played Weasleys’ Wizard Weezes and gets to draw three more cards\";\n    const events = [resolutionEvent(personalText, [player.id], eventText)];\n\n    // Return the state\n    return {\n      state: { players: state.players, deck: state.deck, events },\n      resolve: true,\n    };\n  },\n};\n","import { playerIndex, resolutionEvent, cardIndex } from \"../utils/tools\";\nimport { discardSelected } from \"../utils/turn-tools\";\nimport { Deck } from \"../../javascripts/deck\";\nimport cloneDeep from \"lodash/cloneDeep\";\n\nexport const diagon_alley = {\n  primary: (card, that, turnCycle) => {\n    // Discard the selected card\n    const state = discardSelected(that, turnCycle),\n      instigator = state.players[playerIndex(state.players, that.state.turn)];\n\n    // Deal out a card for each living player and attach an event\n    // for each of those players\n    const events = [],\n      table = cloneDeep(that.state.table),\n      turnOrder = that.state.turnOrder,\n      deadPlayers = that.state.deadPlayers;\n\n    for (let i = 0; i < turnOrder.length; i++) {\n      // Starting with the current player\n      let currentIndex = i + turnOrder.indexOf(that.state.turn);\n      if (currentIndex >= turnOrder.length)\n        currentIndex = currentIndex - turnOrder.length;\n\n      // If the player is dead, don't include them\n      if (deadPlayers.includes(turnOrder[currentIndex])) continue;\n\n      // Place a card on the table\n      table.push(state.deck.drawCard());\n\n      // Compose messages\n      let mainMessage =\n        currentIndex === 0\n          ? \"Diagon Alley! Take a card from the table!\"\n          : instigator.character.shortName +\n            \" has played Diagon Alley! Your turn to take a card!\";\n\n      let waitMessage =\n        currentIndex === 0\n          ? \"Everyone else is choosing their cards.\"\n          : instigator.character.shortName + \" has played Diagon Alley!\";\n\n      // Create this player’s draw event\n      let thisEvent = {\n        popup: {\n          popupType: \"subtle\",\n          message: mainMessage,\n          options: [],\n        },\n        bystanders: {\n          popupType: \"subtle\",\n          message: waitMessage,\n          options: [],\n        },\n        instigator: instigator,\n        cardType: \"diagon_alley\",\n        target: [turnOrder[currentIndex]],\n      };\n\n      events.push(thisEvent);\n    }\n\n    // Change the play phase to match the event.\n    // (Note, since we already have a copied version of turnCycle, which\n    // will not effect the original if we return false from here we don't\n    // need to copy it again or give it back in the returned object).\n    turnCycle.phase = \"diagon_alley\";\n\n    // Return the state\n    return {\n      state: { players: state.players, deck: state.deck, events, table },\n      resolve: false,\n    };\n  },\n  secondary: (card, that, turnCycle) => {\n    const players = cloneDeep(that.state.players),\n      player = players[playerIndex(players, that.state.player_id)],\n      table = cloneDeep(that.state.table),\n      events = cloneDeep(that.state.events);\n\n    // Grab the card from the table\n    player.hand.unshift(table.splice(cardIndex(table, card), 1)[0]);\n\n    // Remove this event\n    events.shift();\n\n    // Check if this is the last player.\n    let lastPlayer = false;\n    if (events.length === 0) {\n      // If so, then set the resolution event\n      let message = \"All players have taken their cards from Diagon Alley!\";\n      let resolution = resolutionEvent(message, [player.id], message);\n\n      events.unshift(resolution);\n      lastPlayer = true;\n    }\n\n    // Return state\n    return { state: { table, players, events }, resolve: lastPlayer };\n  },\n};\n","import { takeHit } from \"./spells/takeHit\";\nimport { playStupefy } from \"./spells/stupefy\";\nimport { playerIndex, resolutionEvent } from \"../utils/tools\";\nimport { discardSelected } from \"../utils/turn-tools\";\nimport cloneDeep from \"lodash/cloneDeep\";\nimport { stupefy } from \"./stupefy\";\n\nexport const wizards_duel = {\n  primary: (subject, that, turnCycle) => {\n    // Discard the selected card\n    const state = discardSelected(that, turnCycle),\n      instigator = state.players[playerIndex(state.players, that.state.turn)];\n\n    // Setup the challenge event\n    const events = [\n      {\n        popup: {\n          message:\n            instigator.character.shortName +\n            \" has challanged you to a Wizard’s Duel!\",\n          options: [\n            { label: \"Take a hit\", function: \"takeHit\" },\n            { label: \"Play Stupefy\", function: \"duel\" },\n          ],\n        },\n        [\"bystanders-\" + instigator.id]: {\n          popupType: \"subtle\",\n          message:\n            \"You have challenged \" +\n            subject.character.shortName +\n            \" to a Wizard’s Duel!\",\n          options: [],\n        },\n        bystanders: {\n          popupType: \"subtle\",\n          message:\n            instigator.character.shortName +\n            \" has challenged \" +\n            subject.character.shortName +\n            \" to a Wizard’s Duel!\",\n          options: [],\n        },\n        instigator: instigator,\n        cardType: \"wizards_duel\",\n        target: [subject.id],\n      },\n    ];\n\n    // Return state\n    return {\n      state: { events, players: state.players, deck: state.deck },\n      resolve: false,\n    };\n  },\n  takeHit: takeHit,\n  duel: (that, index, turnCycle) => {\n    const stupefy = playStupefy(that);\n\n    // Don’t move on if they didn’t play a stupefy\n    if (!stupefy) return false;\n\n    // If they play a stupefy, then give the instigator\n    // a response event\n\n    const events = cloneDeep(that.state.events),\n      thisPlayer =\n        stupefy.state.players[\n          playerIndex(stupefy.state.players, that.state.player_id)\n        ],\n      thatPlayer = events[0].instigator;\n\n    // Figure out whose turn it is so we can tell everyone\n    // what’s going on.\n    const thisTurn =\n      thisPlayer.id ===\n      stupefy.state.players[playerIndex(stupefy.state.players, that.state.turn)]\n        .id;\n\n    // Write the message for the watchers.\n    let message =\n      (thisTurn\n        ? thisPlayer.character.shortName\n        : thisPlayer.character.shortName) +\n      \" and \" +\n      (thisTurn\n        ? thatPlayer.character.shortName\n        : thisPlayer.character.shortName) +\n      \" are fighting a Wizard’s Duel! \" +\n      thisPlayer.character.shortName +\n      \" just cast a Stupefy charm at \" +\n      thatPlayer.character.shortName +\n      \".\";\n\n    // Create the response event\n    const response = {\n      popup: {\n        message:\n          thisPlayer.character.shortName + \" has cast a Stupefy back at you!\",\n        options: [\n          { label: \"Take a hit\", function: \"takeHit\" },\n          { label: \"Play Stupefy\", function: \"duel\" },\n        ],\n      },\n      [\"bystanders-\" + thisPlayer.id]: {\n        popupType: \"subtle\",\n        message:\n          \"You’ve cast a Stupefy at \" + thatPlayer.character.shortName + \"!\",\n        options: [],\n      },\n      bystanders: {\n        popupType: \"subtle\",\n        message: message,\n        options: [],\n      },\n      instigator: thisPlayer,\n      cardType: \"wizards_duel\",\n      target: [thatPlayer.id],\n    };\n\n    // Remove the current event\n    events.shift();\n\n    // Add the new event\n    events.push(response);\n\n    // Remove from selected cards\n    turnCycle[\"id\" + that.state.player_id].cards = [];\n\n    // Return the state\n    return {\n      state: Object.assign(stupefy.state, { events }),\n      resolve: false,\n    };\n  },\n  resolution: (that, lastAction) => {\n    // Figure out who won and who lost the duel\n    const players = that.state.players,\n      winner =\n        players[playerIndex(players, that.state.events[0].instigator.id)],\n      loser = players[playerIndex(players, that.state.events[0].target[0])];\n\n    // Set a message for the duelers and the watchers\n    let winnerText =\n        \"You beat \" + loser.character.shortName + \" in a Wizard’s Duel.\",\n      loserText = winner.character.shortName + \" beat you in a Wizard’s Duel.\",\n      watcherText =\n        winner.character.shortName +\n        \" beat \" +\n        loser.character.shortName +\n        \" in a Wizard’s Duel.\";\n\n    // Create the resolution event\n    const resolution = resolutionEvent(winnerText, [winner.id], watcherText);\n\n    // Add the loser’s message\n    resolution[\"bystanders-\" + loser.id] = {\n      popupType: \"resolution\",\n      message: loserText,\n      options: [],\n    };\n\n    // Return the event\n    return { event: resolution };\n  },\n};\n","import { playerIndex, resolutionEvent } from \"../utils/tools\";\nimport { discardSelected } from \"../utils/turn-tools\";\nimport cloneDeep from \"lodash/cloneDeep\";\n\nexport const three_broomsticks = {\n  primary: (card, that, turnCycle) => {\n    // Discard the selected card\n    const state = discardSelected(that, turnCycle),\n      bartender = state.players[playerIndex(state.players, that.state.turn)],\n      events = cloneDeep(that.state.events);\n\n    // Heal each player by one\n    state.players.forEach((player) => {\n      // Make sure they’re not at max-health already\n      if (player.character.health < player.character.maxHealth)\n        player.character.health++;\n    });\n\n    // Let everyone know what happened\n    let personalText =\n        \"You played the Three Broomsticks and everyone has been healed for 1 point!\",\n      eventText =\n        bartender.character.shortName +\n        \" played the Three Broomsticks and everyone has been healed for 1 point!\";\n\n    // set the event\n    const event = resolutionEvent(personalText, [bartender.id], eventText);\n\n    // Add it to current events\n    events.push(event);\n\n    // Return the state\n    return {\n      state: { events, players: state.players, deck: state.deck },\n      resolve: true,\n    };\n  },\n};\n","import cloneDeep from \"lodash/cloneDeep\";\nimport { Deck } from \"../../javascripts/deck\";\nimport {\n  cardsIncludeName,\n  cardsIndexName,\n  deathEvent,\n  resolutionEvent,\n  playerIndex,\n  eventIndex,\n} from \"./tools\";\nimport { universalOrder, naturalOrder } from \"./turn-tools/universal-order\";\n\nconst lilyMessage =\n  \" is about to die. Would you like to give up a life point to save them?\";\n\nconst role_message = {\n  werewolf: \" was a werewolf and has been defeated!\",\n  \"death eater\":\n    \" was a Death Eater and has been defeated. Hooray for the Ministry!\",\n  auror:\n    \" was an honorable Auror and has been stuck down. The Dark Mark hovers in the sky!\",\n};\n\nconst checkForLilyEvents = (events) => {\n  return events.some((event) => event.popup.message.includes(lilyMessage));\n};\n\nexport const death = {\n  primary: (that, state, turnCycle, options) => {\n    const deadPlayers = [...that.state.deadPlayers],\n      turnOrder = that.state.turnOrder,\n      players = cloneDeep(state.players),\n      deck = new Deck(\n        [...that.state.deck.cards],\n        [...that.state.deck.discards]\n      ),\n      events = cloneDeep(state.events),\n      dyingPlayers = [],\n      deathPowers = [];\n\n    const returnAllChanges = () => {\n      return {\n        deadPlayers,\n        players,\n        deck,\n        events,\n      };\n    };\n\n    // Tell the turnCycle what we were doing\n    // before this person died, so we can go\n    // back to it once this is over.\n    if (!turnCycle.afterDeath?.phase) {\n      turnCycle.afterDeath = {\n        phase: turnCycle.phase,\n        action: turnCycle.action,\n      };\n    }\n\n    players.forEach((player) => {\n      // Don't worry about them if they've been dead already\n      if (deadPlayers.includes(player.id)) return;\n      // If they just died save them in an array to deal with\n      // one at a time\n      if (player.character.health === 0) {\n        dyingPlayers.push(player);\n        return;\n      }\n      // See if they’re one of the chracters with powers\n      // relating to other players’ deaths\n      if (\n        player.power.some((power) =>\n          [\"voldemort\", \"lily_potter\", \"dolores_umbridge\"].includes(power)\n        )\n      ) {\n        deathPowers.push(player);\n      }\n    });\n\n    // If there are multiple deaths, resolve them one after the other.\n    for (let i = 0; i < dyingPlayers.length; i++) {\n      turnCycle.phase = \"death\";\n      turnCycle.action = \"death\";\n\n      const player = dyingPlayers[i];\n      // If they have a butterbeer, then it can be used to save their life\n      if (cardsIncludeName(player.hand, \"butterbeer\")) {\n        // Put the card in the discard\n        deck.serveCards(\n          player.hand.splice(cardsIndexName(player.hand, \"butterbeer\"))\n        );\n        // Heal the player\n        player.character.health++;\n        // Tell everyone what happened\n        events.push(\n          resolutionEvent(\n            \"You drank a butterbeer and were spared from death.\",\n            [player.id],\n            player.character.shortName +\n              \" drank a butterbeer and was spared from death.\"\n          )\n        );\n        // They’re no longer dying, so we can move on\n        // and go back to whatever we were doing before\n        turnCycle.phase = turnCycle.afterDeath.phase;\n        turnCycle.action = turnCycle.afterDeath.action;\n        continue;\n      }\n\n      // If they have Harry's power, they has to be shot twice in the same round;\n      if (player.power.includes(\"harry_potter\")) {\n        // If he they haven’t died already this turn, then they can be saved\n        if (!player.character.end || player.character.end.deaths === 0) {\n          // Set this death and who killed them\n          player.character.end = {\n            deaths: 1,\n            killer: that.state.turn,\n          };\n          // Heal them\n          player.character.health++;\n          // They’re no longer dying, so we can move on\n          // and go back to whatever we were doing before\n          turnCycle.phase = turnCycle.afterDeath.phase;\n          turnCycle.action = turnCycle.afterDeath.action;\n          turnCycle.afterDeath = {};\n          continue;\n        }\n      }\n\n      // If Lilly is around (and not dead), she may save the character\n      deathPowers.forEach((p) => {\n        if (p.power.includes(\"lily_potter\") && options !== \"lily-skip\") {\n          // Create an event\n          events.unshift(\n            deathEvent(\n              player.character.shortName + lilyMessage,\n              p,\n              [\n                { label: \"Yes\", function: \"lily_yes\" },\n                { label: \"No\", function: \"lily_no\" },\n              ],\n              p.character.shortName +\n                \" has a chance to save \" +\n                player.character.shortName +\n                \".\"\n            )\n          );\n        }\n      });\n\n      // If there are Lily Events, give them a chance to save\n      // the dying player\n      if (checkForLilyEvents(events)) return returnAllChanges();\n\n      // == ======== ============ ======== == //\n      // Beyond here, they’re definitely dead //\n      // == ======== ============ ======== == //\n\n      // Officially kill them\n      deadPlayers.push(player.id);\n      // Create an resolution event to tell everyone\n      events.push(\n        resolutionEvent(\n          \"You are now out, but you can still influence the game! As a House Ghost, you may empower another player each turn.\",\n          [player.id],\n          player.character.shortName + role_message[player.role]\n        )\n      );\n\n      // If Voldemort is around (and not dead), he made a horcrux\n      deathPowers.forEach((p) => {\n        if (p.power.includes(\"voldemort\")) {\n          // Give all Voldemorts +2 health and +2 max-health\n          p.character.health++;\n          p.character.maxHealth++;\n        }\n      });\n\n      // =======\n      // Figure out who gets their cards\n      // =======\n\n      // Don't worry with it if they don't have cards\n      if (player.hand.length > 0) {\n        // If they’re Molly or if they have her power\n        // Then they get to choose who gets their cards\n        if (player.power.includes(\"molly_weasley\")) {\n          events.unshift(\n            deathEvent(\n              \"You can choose a player to give your cards to or decide to pass.\",\n              player,\n              [{ label: \"skip\", function: \"molly\" }],\n              \"Molly has died and is choosing who to will her cards to.\"\n            )\n          );\n\n          return returnAllChanges();\n        }\n\n        // If Unbridge is around, all the cards go to her\n        const umbridge = deathPowers.findIndex((p) =>\n          p.power.includes(\"dolores_umbridge\")\n        );\n        if (umbridge !== -1) {\n          // Give all cards to umbridge\n          deathPowers[umbridge].hand.unshift(...player.hand.splice(0));\n        }\n      }\n\n      // Anything that’s left goes to the discard\n      deck.serveCards(player.hand.splice(0));\n      deck.serveCards(player.tableau.splice(0));\n    }\n\n    // Go back to whatever we were doing\n    turnCycle.phase = turnCycle.afterDeath.phase;\n    turnCycle.action = turnCycle.afterDeath.action;\n    turnCycle.afterDeath = {};\n    return returnAllChanges();\n  },\n  lily_yes: (that, index, turnCycle) => {\n    // We want to use the universal order in case there\n    // are multiple players freshly dead, we only want to\n    // try to heal the one we asked about.\n    const players = cloneDeep(that.state.players),\n      lily = players[playerIndex(players, that.state.player_id)],\n      deadPlayers = that.state.deadPlayers,\n      events = cloneDeep(that.state.events);\n\n    let dyingPlayer;\n\n    for (let i = 0; i < players.length; i++) {\n      // The first player that has no health but\n      // has not yet been registered as dead is the\n      // one that we want to try to heal.\n      if (deadPlayers.includes(players[i].id)) continue;\n      if (players[i].character.health === 0) {\n        dyingPlayer = players[i];\n      }\n    }\n\n    // Give the dying player a point of health from Lily\n    dyingPlayer.character.health++;\n    lily.character.health--;\n\n    // Return to whatever we were doing before\n    // the dying player started to die\n    turnCycle.phase = turnCycle.afterDeath.phase;\n    turnCycle.action = turnCycle.afterDeath.action;\n    turnCycle.afterDeath = {};\n\n    // Remove all existing events about saving this player\n    // including the current one.\n    while (\n      eventIndex(events, dyingPlayer.character.shortName + lilyMessage) !== -1\n    ) {\n      events.splice(\n        eventIndex(events, dyingPlayer.character.shortName + lilyMessage),\n        1\n      );\n    }\n\n    // Add a resolution event to let everyone\n    // else know what happened\n    events.unshift(\n      resolutionEvent(\n        lily.character.shortName +\n          \" sacrificed a life point to save your life!\",\n        [dyingPlayer.id],\n        lily.character.shortName +\n          \" sacrificed a life point to save \" +\n          dyingPlayer.character.shortName +\n          \"’s life.\"\n      )\n    );\n\n    // Put the players back in order\n    // players = naturalOrder(players, that.state.player_id);\n\n    // Return the new state\n    return { state: { events, players }, resolve: false };\n  },\n  lily_no: (that, index, turnCycle) => {\n    // Remove this event\n    const events = cloneDeep(that.state.events);\n    events.shift();\n\n    // If there are other \"Lily\" powers out there, then\n    // we need to give them a chance to try to save the player\n    if (eventIndex(events, that.state.events[0].popup.message) !== -1) {\n      return { state: { events }, resolve: false };\n    }\n\n    const dead = death.primary(\n      that,\n      Object.assign(that.state, { events }),\n      turnCycle,\n      \"lily-skip\"\n    );\n\n    return { state: dead, resolve: false };\n  },\n};\n","import { stupefy } from \"./stupefy\";\nimport { expelliarmus } from \"./expelliarmus\";\nimport { accio } from \"./accio\";\nimport { butterbeer } from \"./butterbeer\";\nimport { dementors } from \"./dementors\";\nimport { garroting_gas } from \"./garroting_gas\";\nimport { honeydukes } from \"./honeydukes\";\nimport { weasleys_wizard_weezes } from \"./weasleys_wizard_weezes\";\nimport { diagon_alley } from \"./diagon_alley\";\nimport { wizards_duel } from \"./wizards_duel\";\nimport { three_broomsticks } from \"./three_broomsticks\";\nimport { azkaban } from \"./azkaban\";\nimport { ressurection_stone } from \"./ressurection_stone\";\nimport { fiendfyre } from \"./fiendfyre\";\nimport { discardEvent } from \"./discard\";\nimport { death } from \"../utils/death\";\nimport { felix } from \"./felix\";\n\n// Keep the app from crashing if the card reaction isn’t defined\nlet handler = {\n  get: function (target, name) {\n    return target.hasOwnProperty(name)\n      ? target[name]\n      : {\n          primary: () => {\n            console.log(name + \" is not yet defined.\");\n            return false;\n          },\n        };\n  },\n};\n\nconst playCard = new Proxy(\n  {\n    accio,\n    azkaban,\n    discardEvent,\n    stupefy,\n    expelliarmus,\n    butterbeer,\n    dementors,\n    honeydukes,\n    diagon_alley,\n    wizards_duel,\n    weasleys_wizard_weezes,\n    three_broomsticks,\n    ressurection_stone,\n    garroting_gas,\n    fiendfyre,\n    death,\n    felix,\n  },\n  handler\n);\n\nexport { playCard };\n","import { checkTopCard } from \"../utils/checkTopCard\";\nimport { playerIndex, resolutionEvent, cardsIndexName } from \"../utils/tools\";\nimport cloneDeep from \"lodash/cloneDeep\";\nimport { Deck } from \"../../javascripts/deck\";\n\nexport const azkaban = (that, turnCycle) => {\n  const players = [...that.state.players],\n    thisPlayer = players[playerIndex(players, that.state.player_id)];\n\n  let house = thisPlayer.character.house,\n    oneBefore = that.state.turnOrder.indexOf(that.state.player_id) - 1;\n\n  // Make sure the character has a house to be drawing for\n  if (oneBefore < 0) oneBefore += that.state.turnOrder.length;\n  if (house === \"\")\n    house =\n      that.state.players[that.findMe(that.state.turnOrder[oneBefore])].character\n        .house;\n\n  if (house === \"\") house = \"H\";\n\n  // Draw to see if they get their house\n  const events = cloneDeep(that.state.events),\n    topCard = checkTopCard([house], that.state.deck, that.state.table);\n\n  // Remove current Azkaban status\n  events.shift();\n\n  // Setup the resolution event accordingly\n  let resolution = {};\n\n  // Figure out what to tell everyone\n  if (topCard.gotit) {\n    let message =\n        \"Hooray! You drew a \" + topCard.house + \" and escaped Azkaban\",\n      watcherMessage =\n        thisPlayer.character.shortName +\n        \" drew a \" +\n        topCard.house +\n        \" and escaped Azkaban\";\n\n    resolution = resolutionEvent(message, [thisPlayer.id], watcherMessage);\n\n    topCard.deck.serveCard(\n      thisPlayer.tableau.splice(\n        cardsIndexName(thisPlayer.tableau, \"azkaban\"),\n        1\n      )[0]\n    );\n  } else {\n    let message =\n        \"Bummer! You drew a \" +\n        topCard.house +\n        \" and are still in Azkaban. You’ve lost this turn.\",\n      watcherMessage =\n        thisPlayer.character.shortName +\n        \" failed to escape Azkaban and their turn has been skipped.\";\n\n    resolution = resolutionEvent(message, [thisPlayer.id], watcherMessage);\n  }\n\n  // Put the resolution event into the queue\n  events.push(resolution);\n\n  // Return the state\n  return {\n    state: { events, deck: topCard.deck },\n    gotit: topCard.gotit,\n    resolve: true,\n  };\n};\n","import { playerIndex, resolutionEvent, cardIndex } from \"../utils/tools\";\nimport { discard, cycleCleanse } from \"../utils/turn-tools\";\nimport { Deck } from \"../../javascripts/deck\";\nimport cloneDeep from \"lodash/cloneDeep\";\nimport { clone } from \"lodash\";\n\nexport const discardEvent = {\n  primary: (that, turnCycle) => {\n    const events = cloneDeep(that.state.events);\n    let message = \"Are you sure you want to discard this card?\";\n\n    if (turnCycle.cards.length > 1)\n      message = \"Are you sure you want to discard these cards?\";\n\n    // Create this player’s discard event\n    let thisEvent = {\n      popup: {\n        popupType: \"subtle\",\n        message: message,\n        options: [\n          { label: \"yes\", function: \"dump\" },\n          { label: \"no\", function: \"clear\" },\n        ],\n      },\n      instigator:\n        that.state.players[\n          playerIndex(that.state.players, that.state.player_id)\n        ],\n      cardType: \"discard\",\n      target: [that.state.player_id],\n    };\n\n    events.push(thisEvent);\n\n    // Change the play phase to match the event.\n    // (Note, since we already have a copied version of turnCycle, which\n    // will not effect the original if we return false from here we don't\n    // need to copy it again or give it back in the returned object).\n\n    turnCycle.phase = \"discard\";\n    turnCycle.action = \"discardEvent\";\n\n    // Return the state\n    return {\n      state: { events: events, turnCycle: turnCycle },\n      resolve: false,\n    };\n  },\n  dump: (that, index, turnCycle) => {\n    const players = cloneDeep(that.state.players),\n      player = players[playerIndex(players, that.state.player_id)],\n      events = cloneDeep(that.state.events),\n      deck = new Deck(\n        [...that.state.deck.cards],\n        [...that.state.deck.discards]\n      );\n\n    discard(player, deck, turnCycle.cards);\n\n    events.shift();\n\n    cycleCleanse(turnCycle, that);\n\n    return { state: { deck, players, events }, resolve: false };\n  },\n  clear: (that, index, turnCycle) => {\n    const events = cloneDeep(that.state.events);\n\n    events.shift();\n\n    turnCycle.phase = \"selected\";\n    if (turnCycle.cards.length === 1) {\n      turnCycle.action = turnCycle.cards[0].name;\n    } else if (\n      turnCycle.cards.length === 2 &&\n      turnCycle.cards.some((card) => card.name === \"stupefy\") &&\n      turnCycle.cards.some((card) => card.name === \"felix_felicis\")\n    ) {\n      turnCycle.action = \"felix\";\n    } else {\n      turnCycle.action = \"discard\";\n    }\n\n    // Return state\n    return { state: { events }, resolve: false };\n  },\n};\n","import {\n  playerIndex,\n  resolutionEvent,\n  cardIndex,\n  titleCase,\n} from \"../utils/tools\";\nimport { Deck } from \"../../javascripts/deck\";\nimport cloneDeep from \"lodash/cloneDeep\";\n\nexport const ressurection_stone = {\n  primary: (card, that, turnCycle) => {\n    const deck = new Deck(...[that.state.deck.cards]),\n      table = [...that.state.deck.discards];\n\n    turnCycle.phase = \"ressurection_stone-discards\";\n    return { deck, table, turnCycle };\n  },\n  secondary: (card, that, turnCycle) => {\n    const players = cloneDeep(that.state.players),\n      player = players[playerIndex(players, that.state.player_id)];\n    let table = [...that.state.table];\n\n    // Take the selected card from the table\n    player.hand.unshift(table.splice(cardIndex(table, card))[0]);\n\n    // Put all the cards back in the discard\n    const deck = new Deck([...that.state.deck.cards], [...table]);\n    // Empty the table\n    table = [];\n\n    // Create an event to tell everyone what happened\n    let resolution = resolutionEvent(\n      \"You took a \" +\n        titleCase(card.name.replace(\"_\", \" \")) +\n        \" from the discard\",\n      [player.id],\n      player.character.shortName +\n        \" ressurected a card from the discard with the Ressurection Stone\"\n    );\n\n    // Add the event\n    const events = [...that.state.events];\n    events.push(resolution);\n\n    // Add the stone of the used powers so\n    // they can’t play it again this turn\n    turnCycle.used.push(\"ressurection_stone\");\n    // They drew a card\n    turnCycle.draw--;\n\n    // Return state\n    return { state: { events, deck, table, players }, resolve: true };\n  },\n};\n","import { playProtego } from \"./spells/protego\";\nimport { takeHit } from \"./spells/takeHit\";\nimport { houseHide } from \"./spells/houseHide\";\nimport { protegoOptions } from \"../utils/character-events\";\nimport { playerIndex, resolutionEvent, cardIndex } from \"../utils/tools\";\nimport cloneDeep from \"lodash/cloneDeep\";\nimport { Deck } from \"../../javascripts/deck\";\nimport { incrementTurn, cycleCleanse } from \"../utils/turn-tools\";\n\nexport const fiendfyre = {\n  primary: (given_subject, that, turnCycle) => {\n    const events = cloneDeep(that.state.events),\n      players = cloneDeep(that.state.players),\n      instigator = players[playerIndex(players, that.state.player_id)],\n      subject = players[playerIndex(players, given_subject.id)];\n\n    subject.tableau.push(\n      instigator.hand.splice(\n        cardIndex(instigator.hand, turnCycle.cards[0]),\n        1\n      )[0]\n    );\n\n    const fiendfyreEvent = {\n      popup: {\n        message:\n          instigator.character.shortName +\n          \" has cast Fiendfyre at you! Draw a card to see if you make it past\",\n        options: [\n          {\n            label: \"Draw Card\",\n            function: \"draw\",\n          },\n        ],\n        popupType: \"subtle\",\n      },\n      bystanders: {\n        popupType: \"subtle\",\n        message:\n          instigator.character.shortName +\n          \" has cast Fiendfyre at \" +\n          subject.character.shortName +\n          \"! They must draw to try to get past.\",\n        options: [],\n      },\n      instigator: instigator,\n      cardType: \"fiendfyre\",\n      target: [subject.id],\n    };\n\n    events.push(fiendfyreEvent);\n\n    turnCycle.phase = \"attack\";\n    turnCycle.action = \"fiendfyre\";\n\n    return { state: { events, players }, resolve: false };\n  },\n  draw: (that, index, turnCycle) => {\n    const draw = houseHide(that, index),\n      events = cloneDeep(that.state.events),\n      players = cloneDeep(that.state.players),\n      instigator = players[playerIndex(players, events[0].instigator.id)],\n      lastSubject = players[playerIndex(players, events[0].target[0])],\n      fiendfyreCard = lastSubject.tableau.splice(\n        cardIndex(lastSubject.tableau, turnCycle.cards[0]),\n        1\n      )[0];\n\n    events.shift();\n\n    if (draw.resolve) {\n      // Tell everyone that you beat the fiendfyre!\n      let message = \"You have extinguished the fiendfyre!\",\n        watchMessage =\n          lastSubject.character.shortName + \" has extinguished the fiendfyre!\";\n\n      const resolve = resolutionEvent(message, [lastSubject.id], watchMessage);\n      events.push(resolve);\n\n      // Put the card in the discard\n      draw.state.deck.serveCard(fiendfyreCard);\n\n      // reset the turnCycle object\n      cycleCleanse(turnCycle, that);\n\n      return {\n        state: { events, deck: draw.state.deck, players },\n        resolve: false,\n      };\n    } else {\n      // lastSubject takes a hit\n      lastSubject.character.health--;\n\n      const nextSubjectId = incrementTurn(\n          lastSubject.id,\n          that.state.turnOrder,\n          that.state.deadPlayers\n        ),\n        nextSubject = players[playerIndex(players, nextSubjectId)];\n\n      // Put the card in front of them\n      nextSubject.tableau.push(fiendfyreCard);\n\n      const fiendfyreEvent = {\n        popup: {\n          message:\n            instigator.character.shortName +\n            \" cast Fiendfyre and \" +\n            lastSubject.character.shortName +\n            \" was just burnt! \" +\n            \" Draw a card to see if you can extinguish it.\",\n          options: [\n            {\n              label: \"Draw Card\",\n              function: \"draw\",\n            },\n          ],\n        },\n        bystanders: {\n          popupType: \"subtle\",\n          message:\n            instigator.character.shortName +\n            \" cast Fiendfyre and \" +\n            lastSubject.character.shortName +\n            \" has been burnt! \" +\n            nextSubject.character.shortName +\n            \" must now draw to try to get past.\",\n          options: [],\n        },\n        instigator: instigator,\n        cardType: \"fiendfyre\",\n        target: [nextSubjectId],\n      };\n\n      events.push(fiendfyreEvent);\n\n      return {\n        state: { events, players, deck: draw.state.deck, resolve: false },\n      };\n    }\n  },\n  resolution: (that, lastAction) => {\n    const instigator =\n        that.state.players[playerIndex(that.state.players, that.state.turn)],\n      subject =\n        that.state.players[\n          playerIndex(that.state.players, that.state.turnCycle.hotseat)\n        ];\n\n    let personalText = \"\";\n    let eventText = \"\";\n\n    return { event: resolutionEvent(personalText, [subject.id], eventText) };\n  },\n};\n","import {\n  playerIndex,\n  resolutionEvent,\n  eventIndex,\n  cardIndex,\n} from \"../utils/tools\";\nimport cloneDeep from \"lodash/cloneDeep\";\nimport { Deck } from \"../../javascripts/deck\";\nimport { remove } from \"lodash\";\nimport { cycleBeginning } from \"../utils/turn-tools\";\n\nexport const felix = {\n  primary: (subject, that, turnCycle) => {\n    const subject_index = playerIndex(turnCycle.felix, subject.id);\n\n    turnCycle.phase = \"felix\";\n    if (!turnCycle.felix) {\n      turnCycle.felix = [subject];\n    } else {\n      if (turnCycle.felix.length < 2 && subject_index === -1) {\n        turnCycle.felix.push(subject);\n      } else if (subject_index !== -1) {\n        turnCycle.felix.splice(playerIndex(turnCycle.felix, subject.id), 1);\n      } else {\n        that.addAlert(\n          \"You can only shoot a maximum of two players with Felix Felicis. Deselect another player first.\"\n        );\n      }\n    }\n\n    const events = cloneDeep(that.state.events);\n\n    let felixMessage =\n      \"Choose one player to cast two spells at or two players to shoot once each.\";\n    if (eventIndex(events, felixMessage) === -1) {\n      const felixEvent = {\n        popup: {\n          popupType: \"subtle\",\n          message: felixMessage,\n          options: [\n            {\n              label: \"Stupefy!\",\n              function: \"shoot\",\n            },\n            {\n              label: \"X\",\n              function: \"cancel\",\n            },\n          ],\n        },\n        instigator: that.state.player_id,\n        cardType: \"felix_felicis\",\n        target: [that.state.player_id],\n      };\n      events.push(felixEvent);\n    }\n\n    // console.log(turnCycle);\n    return { state: { events }, resolve: false };\n  },\n  shoot: (that) => {\n    let turnCycle = cloneDeep(that.state.turnCycle);\n    const players = cloneDeep(that.state.players),\n      instigator = players[playerIndex(players, that.state.turn)],\n      indexes = turnCycle.felix.length === 2 ? [0, 1] : [0, 0],\n      events = cloneDeep(that.state.events),\n      deck = new Deck(\n        [...that.state.deck.cards],\n        [...that.state.deck.discards]\n      );\n\n    // We’re shooting two Stupefys no matter what\n    for (let i = 0; i < 2; i++) {\n      players[playerIndex(players, turnCycle.felix[indexes[i]].id)].character\n        .health--;\n    }\n\n    // Tell everyone what happened\n    let message =\n      turnCycle.felix.length === 2\n        ? turnCycle.felix[0].character.shortName +\n          \" and \" +\n          turnCycle.felix[1].character.shortName +\n          \" were both shot by \" +\n          instigator.character.shortName +\n          \"’s Felix-fortefied Stupefy.\"\n        : turnCycle.felix[0].character.shortName +\n          \" was shot by \" +\n          instigator.character.shortName +\n          \"’s Felix-fortefied Stupefy.\";\n    const resolution = resolutionEvent(message, [instigator.id], message);\n\n    events.push(resolution);\n\n    // Discard the Stupefy and remove Felix from the game.\n    turnCycle.cards.forEach((card) => {\n      let removedCard = instigator.hand.splice(\n        cardIndex(instigator.hand, card),\n        1\n      )[0];\n      if (removedCard.name !== \"felix_felicis\") deck.serveCard(removedCard);\n    });\n\n    turnCycle = cycleBeginning(turnCycle, that);\n\n    return { state: { deck, players, turnCycle, events }, resolve: true };\n  },\n  cancel: (that) => {\n    const turnCycle = cloneDeep(that.state.turnCycle),\n      events = cloneDeep(that.state.events);\n\n    events.shift();\n\n    turnCycle.phase = \"selected\";\n    turnCycle.felix = [];\n\n    return { state: { events, turnCycle }, resolve: false };\n  },\n  resolution: () => {\n    return \"no resolution\";\n  },\n};\n","import { playerIndex, cardsIncludeName } from \"../utils/tools\";\nimport cloneDeep from \"lodash/cloneDeep\";\n\nexport const cycleBeginning = (given_turnCycle, that) => {\n  let turnCycle = Object.assign(cloneDeep(given_turnCycle), {\n    action: \"\",\n    cards: [],\n    felix: [],\n    hotseat: -1,\n    phase: \"initial\",\n  });\n\n  console.log(turnCycle);\n\n  const players = that.state.players,\n    this_player = players[playerIndex(players, that.state.turn)];\n\n  players.forEach((player) => {\n    turnCycle[\"id\" + player.id] = { choice: \"\", cards: [] };\n  });\n\n  if (\n    cardsIncludeName(this_player.tableau, \"elder_wand\") ||\n    this_player.character.fileName === \"sirius_black\"\n  ) {\n    turnCycle.shots = 9999;\n  }\n\n  return turnCycle;\n};\n","import React, { Component } from \"react\";\nimport \"../stylesheets/sidebar.css\";\nimport { players } from \"../javascripts/card-setup\";\n\nclass SideBar extends Component {\n  state = {};\n\n  classes = (v) => {\n    if (v.id === this.props.turn) return \"current-player\";\n    if (this.props.that.deadPlayers.includes(v.id)) return \"dead\";\n    return \"\";\n  };\n\n  myTurn = () => {\n    if (this.props.that.turnCycle.phase !== \"initial\") return false;\n    return this.props.turn === this.props.query.id;\n  };\n\n  render() {\n    return (\n      <div\n        className={\n          \"sidebar col-md-4\" + (this.props.that.showCards ? \"\" : \" hidden\")\n        }\n      >\n        <div className=\"sidebar-inner\">\n          <div className=\"room-name\">{this.props.query.room}</div>\n          <div className=\"players\">\n            {this.props.players.map((v, i) => (\n              <div key={v.id} className={this.classes(v)}>\n                {v.name}\n              </div>\n            ))}\n          </div>\n\n          <div\n            className={\"button\" + (!this.myTurn() ? \" disabled\" : \"\")}\n            onClick={this.myTurn() ? this.props.endTurn : () => {}}\n          >\n            End Turn\n          </div>\n          <div\n            className={\"role \" + this.props.players[0].role.replace(\" \", \"_\")}\n          ></div>\n        </div>\n        <div className=\"hidebar\">\n          <div className=\"inner\" onClick={this.props.toggleCards}></div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default SideBar;\n","import React, { Component } from \"react\";\nimport \"../stylesheets/alert.css\";\n\nclass Alert extends Component {\n  state = {\n    hidden: true,\n  };\n\n  componentDidMount() {\n    setTimeout(() => {\n      this.unhide();\n    }, 200);\n  }\n\n  unhide = () => {\n    this.setState({ hidden: false });\n  };\n\n  hide = () => {\n    this.props.deleteMe(this.props.index);\n  };\n\n  render() {\n    return (\n      <div\n        style={{ top: this.props.index * 68 + 10 }}\n        className={\"alert\" + (this.state.hidden ? \" hidden\" : \"\")}\n      >\n        <div className=\"message\">{this.props.message}</div>\n        <div className=\"a\" onClick={this.hide}>\n          close&nbsp;&nbsp;&nbsp;<span className=\"x\"></span>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Alert;\n","import React, { Component } from \"react\";\nimport \"../stylesheets/alert.css\";\n\nclass Alert extends Component {\n  state = {\n    hidden: true,\n  };\n\n  resolutionLoop = () => {\n    // If the element still exists and it's not hidden\n    // wait a tick, then hide / delete it\n    if (\n      this.props.actions.popupType === \"resolution\" &&\n      !this.state.hidden &&\n      !this.looping\n    ) {\n      this.looping = true;\n      setTimeout(() => {\n        this.looping = false;\n        this.hide();\n        this.resolutionLoop();\n      }, 2500);\n    }\n  };\n\n  componentDidMount() {\n    setTimeout(() => {\n      // Fade element in a the beginning\n      this.unhide();\n      // Check the resolution loop so\n      // We can fade the element out at the end\n      this.resolutionLoop();\n    }, 500);\n  }\n\n  unhide = () => {\n    // Fade element if hidden\n    if (this.state.hidden) {\n      this.setState({ hidden: false });\n    }\n  };\n\n  hide = () => {\n    // If it's the only resolution event\n    // then fade it out before deletion\n    if (this.props.that.events.length === 1) {\n      this.setState({ hidden: true });\n      setTimeout(() => {\n        this.props.deleteMe();\n      }, 500);\n    } else {\n      // If there's more than one resolution event\n      // delete this one now and move on to the next\n      this.props.deleteMe();\n    }\n  };\n\n  replaceNames = (message) => {\n    return message.replace(\n      this.props.players[0].character.shortName + \" has\",\n      \"You have\"\n    );\n  };\n\n  render() {\n    this.resolutionLoop();\n    return (\n      <div\n        className={\n          \"alert actions\" +\n          (this.props.actions.popupType\n            ? \" \" + this.props.actions.popupType\n            : \"\") +\n          (this.state.hidden ? \" hidden\" : \"\")\n        }\n      >\n        <div className={\"message\"}>\n          {this.replaceNames(this.props.actions.message)}\n        </div>\n        {this.props.actions.options.map((v, i) => (\n          <div\n            key={i}\n            className=\"a\"\n            onClick={\n              this.props.running\n                ? () => this.props.acFunction(v.function, i)\n                : () => {\n                    this.props.Alert(\n                      \"An error occurred, can you please try that again?\"\n                    );\n                  }\n            }\n          >\n            {v.label}\n          </div>\n        ))}\n      </div>\n    );\n  }\n}\n\nexport default Alert;\n","import React, { Component } from \"react\";\nimport Card from \"./card\";\nimport { emptyCard } from \"../javascripts/card-setup\";\nimport \"../stylesheets/table.css\";\n// import {emp}\n\nclass Table extends Component {\n  tableClickable = (card) => {\n    if (this.props.targets.includes(\"table\") && card.fileName !== \"\")\n      return true;\n    if (this.props.targets.includes(\"table-empty\") && card.fileName === \"\")\n      return true;\n    return false;\n  };\n\n  state = {};\n  render() {\n    const table =\n      this.props.table.length > 0\n        ? [...this.props.table, emptyCard]\n        : [emptyCard, emptyCard];\n    return (\n      <div className=\"table\">\n        {table.map((card, i) => (\n          <Card\n            key={i}\n            index={i}\n            extraClass={this.tableClickable(card) ? \"clickable \" : \"\"}\n            card={card}\n            playCard={\n              this.tableClickable(card)\n                ? () => {\n                    this.props.tableClick(card);\n                  }\n                : () => {}\n            }\n          />\n        ))}\n      </div>\n    );\n  }\n}\n\nexport default Table;\n","export const cardTargets = (name, turnCycle) => {\n  const targets = [];\n\n  switch (name) {\n    case \"accio\":\n      targets.push(...[\"tableau\", \"hand\", \"range\"]);\n      break;\n    case \"expelliarmus\":\n      targets.push(...[\"tableau\", \"hand\"]);\n      break;\n    case \"larch_wand\":\n    case \"yew_wand\":\n    case \"aspen_wand\":\n    case \"holly_wand\":\n    case \"elder_wand\":\n    case \"broomstick\":\n    case \"polyjuice_potion\":\n    case \"resurrection_stone\":\n    case \"expecto_patronum\":\n    case \"vanishing_cabinet\":\n    case \"invisibility_cloak\":\n      targets.push(...[\"my-tableau-empty\", \"my-character\"]);\n      break;\n    case \"fiendfyre\":\n    case \"azkaban\":\n      targets.push(\"tableau-empty\", \"characters\");\n      break;\n    case \"felix\":\n      targets.push(\"characters\");\n      break;\n    case \"apparate\":\n      targets.push(\"between-characters\");\n      break;\n    case \"dementors\":\n    case \"three_broomsticks\":\n    case \"honeydukes\":\n    case \"weasleys_wizard_weezes\":\n    case \"garroting_gas\":\n    case \"diagon_alley\":\n      targets.push(\"table-empty\");\n      break;\n    case \"wizards_duel\":\n      targets.push(\"characters\");\n      break;\n    case \"stupefy\":\n      if (turnCycle.shots > 0) targets.push(\"characters\", \"wand-range\");\n      break;\n    case \"butterbeer\":\n      targets.push(\"my-character\");\n      break;\n    case \"three\":\n      targets.push(\"characters\");\n      break;\n    default:\n      break;\n  }\n\n  return targets;\n};\n","import cloneDeep from \"lodash/cloneDeep\";\nimport { playerIndex } from \"../../utils/tools\";\n\nexport const sortPlayers = (given_players, given_order) => {\n  const players = cloneDeep(given_players),\n    newPlayers = [];\n\n  given_order.forEach((id) => {\n    newPlayers.push(players[playerIndex(players, id)]);\n  });\n\n  return newPlayers;\n};\n","import React, { Component } from \"react\";\nimport Card from \"./card\";\n\nclass CharacterCard extends Card {\n  state = {};\n\n  render() {\n    return (\n      <div className=\"character\">\n        <div\n          className={\n            this.props.character.fileName +\n            \" card \" +\n            this.props.extraClass +\n            (this.isEmpty(this.props.character.house)\n              ? \"\"\n              : this.props.character.house + \" \")\n          }\n          style={{\n            backgroundImage:\n              \"url('/images/stupefy/characters/\" +\n              this.props.character.fileName +\n              \".jpg')\",\n          }}\n          onClick={this.props.playCard}\n        ></div>\n      </div>\n    );\n  }\n}\n\nexport default CharacterCard;\n","import React, { Component } from \"react\";\nimport CharacterCard from \"../components/character-card\";\nimport \"../stylesheets/choose-character.css\";\n\nclass ChooseCharacter extends Component {\n  state = {};\n\n  getRoleSentence = () => {\n    let message = \", you are \";\n    switch (this.props.player.role) {\n      case \"minister\":\n        message +=\n          \"the Minister of Magic. You & your Aurors must \" +\n          \"defeat the Death Eaters and you must survive until the end of the game \" +\n          \"choose a character that you think will help you the most while you strive \" +\n          \"to rid the Wizarding World from this brand of evil.\";\n        break;\n      case \"auror\":\n        message +=\n          \"an Auror of the Ministry of Magic. You must protect the Minister of Magic\" +\n          \"and help them to defeat the Death Eaters. The Minister must survive until the end of the game \" +\n          \"and you must insure that they do. Even at great risk to yourself. Choose a character fitting \" +\n          \"for this task.\";\n        break;\n      case \"death eater\":\n        message +=\n          \"a Death Eater. Your goal is to, with your fellow Death Eaters, overthrow the Ministry \" +\n          \"of Magic so you can establish a new world order where Wizards and Witches take their \" +\n          \"rightful place and rule over the Muggles & Mud-Bloods. Choose a character fitting for this task.\";\n        break;\n      case \"werewolf\":\n        message +=\n          \"a Werewolf. As an outcast from the Wizarding World, your goal is revenge for all the wrongs done to you. \" +\n          \"You must destroy all of the other players. Remember, though, that if the Minister dies \" +\n          \"before all the Death Eaters are dead, then the Death Eaters win & the game ends. Choose \" +\n          \"a character that will help you effect your goal.\";\n        break;\n    }\n\n    return message;\n  };\n\n  render() {\n    return (\n      <div className=\"choose-character character\">\n        <div className=\"holder\">\n          <div className=\"title\">CHOOSE YOUR CHARACTER</div>\n          <div className=\"briefing\">\n            {this.props.player.name + this.getRoleSentence()}\n          </div>\n          {this.props.player.character.map((character, i) => (\n            <CharacterCard\n              key={i}\n              extraClass=\"clickable \"\n              character={character}\n              playCard={() => {\n                this.props.chooseCharacter(character);\n              }}\n            />\n          ))}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default ChooseCharacter;\n","import React, { Component, useRef } from \"react\";\nimport Player from \"./player\";\nimport CardDeck from \"./card-deck\";\nimport { Deck } from \"../javascripts/deck\";\nimport { CardRules } from \"./card-rules\";\nimport { resolveEvent } from \"./utils/resolve-event\";\nimport { protegoOptions } from \"./utils/character-events\";\nimport { playCard } from \"./card-rules/all-rules\";\nimport SideBar from \"./sidebar\";\nimport Alert from \"./alert\";\nimport Action from \"./action\";\nimport Table from \"./table\";\nimport socketIOClient from \"socket.io-client\";\nimport { ef } from \"../javascripts/event-functions\";\nimport cloneDeep from \"lodash/cloneDeep\";\nimport {\n  titleCase,\n  cardsInclude,\n  cardIndex,\n  playerIndex,\n  popUp,\n  deathCheck,\n  resolutionEvent,\n  tableauProblems,\n} from \"./utils/tools\";\nimport {\n  endTurn,\n  setupCycle,\n  cycleCleanse,\n  incrementTurn,\n  discard,\n  countAllCards,\n} from \"./utils/turn-tools\";\nimport { getTargets, cardTargets } from \"./utils/get-targets\";\n\nimport { sortPlayers } from \"./card-rules/spells/sort-players\";\nimport { initial } from \"lodash\";\nimport ChooseCharacter from \"./choose-character\";\n\nconst ENDPOINT =\n  process.env.NODE_ENV !== \"development\"\n    ? window.location.origin\n    : window.location.origin.replace(window.location.port, \"4001\");\n// const ENDPOINT = window.location.origin \"http://127.0.0.1:4001\";\n// const socket = socketIOClient(ENDPOINT);\n\nclass Board extends Component {\n  state = {\n    players: sortPlayers(\n      this.props.setupObj.players,\n      this.props.setupObj.turnOrder\n    ),\n    deck: this.props.setupObj.deck,\n    // reaction: emptyReaction,\n    actions: {\n      message: \"\",\n      options: [],\n    },\n    events: this.props.setupObj.events || [],\n    alerts: [],\n    table: this.props.setupObj.table || [],\n    turn: this.props.setupObj.turn,\n    turnCycle: this.props.setupObj.turnCycle,\n    turnOrder: this.props.setupObj.turnOrder,\n    deadPlayers: this.props.setupObj.deadPlayers || [],\n    player_id: this.props.query.id,\n    player_room: this.props.query.room,\n    running: true,\n    showCards: true,\n  };\n\n  componentDidMount = () => {\n    this.socket = socketIOClient(ENDPOINT);\n    // Join the socket for the room we’re in\n    this.socket.emit(\"join-room\", this.state.player_room);\n\n    // What to do when you get new info from the socket\n    this.socket.on(\"from-the-room\", (data) => {\n      this.catchSocket(data);\n    });\n\n    this.socket.on(\"pause\", (time) => {\n      console.log(Date.now() - time);\n      this.setState({\n        running: false,\n      });\n    });\n\n    this.socket.on(\"resume\", (time) => {\n      console.log(Date.now() - time);\n      this.setState({\n        running: true,\n      });\n    });\n\n    // Count to make sure we haven’t lost any cards\n    const count = countAllCards(this);\n    console.log(\n      \"Card count is \" +\n        count.length +\n        \" with \" +\n        count.duplicates +\n        \" duplicates: [\" +\n        count.catcher +\n        \"]\"\n    );\n\n    // Catch popups!\n    const popup = popUp(this.state, this);\n    if (popup) this.setState({ actions: popup });\n\n    if (this.state.turnCycle.phase === \"unset\")\n      this.setState({ turnCycle: setupCycle(this, this.state.turn) });\n  };\n\n  pauseRoom = () => {\n    this.socket.emit(\"pause-room\", {\n      room: this.state.player_room,\n      time: Date.now(),\n    });\n  };\n\n  resumeRoom = () => {\n    this.socket.emit(\"resume-room\", {\n      room: this.state.player_room,\n      time: Date.now(),\n    });\n  };\n\n  catchSocket = (data) => {\n    const popup = popUp(data, this);\n    if (popup) data.actions = popup;\n\n    console.log(data);\n    this.setState(data);\n  };\n\n  addAlert = (alert) => {\n    const alerts = [...this.state.alerts, alert];\n    this.setState({ alerts });\n  };\n\n  deleteAlert = (i) => {\n    let alerts = [...this.state.alerts];\n    alerts.splice(i, 1);\n    this.setState({ alerts });\n  };\n\n  emitEvent = (state) => {\n    this.socket.emit(\n      \"stupefy\",\n      Object.assign({ room: this.state.player_room }, state)\n    );\n\n    const popup = popUp(state, this);\n    if (popup) state.actions = popup;\n    console.log(state);\n\n    this.setState(state);\n  };\n\n  nextTurn = () => {\n    const turnEnded = endTurn(this);\n    if (!turnEnded) return;\n\n    const turn = incrementTurn(\n      this.state.turn,\n      this.state.turnOrder,\n      this.state.deadPlayers\n    );\n\n    // Get the turnCycle ready for the next player\n    const setup = setupCycle(this, turn);\n\n    // Setup / reset the player’s character powers\n    const players = turnEnded.players || cloneDeep(this.state.players),\n      player = players[playerIndex(players, turn)];\n\n    player.power = [player.character.fileName];\n\n    this.emitEvent(Object.assign(turnEnded, { turn, players }, setup));\n  };\n\n  turnOrder = () => {\n    const players = [...this.state.players],\n      playerIndex = this.state.turnOrder.indexOf(this.state.player_id);\n\n    // Place this player at the start of the player array\n    // while maintaining the correct order\n    const beforePlayer = players.splice(0, playerIndex);\n    return [...players, ...beforePlayer];\n  };\n\n  handClick = (card, player) => {\n    // This function determines what to do when you\n    // click on a card in a hand given the state of the turn cycle.\n    const turnCycle = cloneDeep(this.state.turnCycle);\n\n    if (turnCycle.phase === \"initial\") {\n      turnCycle.cards.push(card);\n      turnCycle.phase = \"selected\";\n      turnCycle.action = card.name;\n\n      // We’re finished here for now\n      this.emitEvent({ turnCycle });\n      return;\n    } else if (turnCycle.phase === \"stuck-in-azkaban\") {\n      turnCycle.cards.push(card);\n      turnCycle.phase = \"selected-stuck-in-azkaban\";\n      turnCycle.action = \"discard\";\n\n      // We’re finished here for now\n      this.emitEvent({ turnCycle });\n      return;\n    } else if (turnCycle.phase === \"selected-stuck-in-azkaban\") {\n      if (cardsInclude(turnCycle.cards, card)) {\n        turnCycle.cards.splice(cardIndex(turnCycle.cards, card), 1);\n      } else {\n        turnCycle.cards.push(card);\n      }\n\n      if (turnCycle.cards.length === 0) turnCycle.phase = \"stuck-in-azkaban\";\n\n      // We’re finished here for now\n      this.emitEvent({ turnCycle });\n      return;\n    } else if (turnCycle.phase === \"selected\") {\n      if (player.id === this.state.player_id) {\n        if (cardsInclude(turnCycle.cards, card)) {\n          turnCycle.cards.splice(cardIndex(turnCycle.cards, card), 1);\n        } else {\n          turnCycle.cards.push(card);\n          turnCycle.action = \"discard\";\n        }\n\n        // Check for the Felix Felicis scenario\n        if (\n          turnCycle.cards.length === 2 &&\n          turnCycle.cards.some((card) => card.name === \"stupefy\") &&\n          turnCycle.cards.some((card) => card.name === \"felix_felicis\")\n        ) {\n          turnCycle.action = \"felix\";\n        }\n        // Reset action to that of the one card\n        if (turnCycle.cards.length === 1) {\n          turnCycle.action = turnCycle.cards[0].name;\n        }\n        // Back to the beginning\n        if (turnCycle.cards.length === 0) {\n          cycleCleanse(turnCycle, this);\n        }\n\n        // We’re finished here for now\n        this.emitEvent({ turnCycle });\n        return;\n      } else {\n        const eventCreation = playCard[turnCycle.action].primary(\n          player,\n          card,\n          this,\n          turnCycle\n        );\n\n        if (!eventCreation) return;\n        turnCycle.phase = \"attack\";\n\n        if (eventCreation.resolve) {\n          cycleCleanse(turnCycle, this);\n          this.emitEvent(Object.assign(eventCreation.state, { turnCycle }));\n          return;\n        }\n      }\n    } else if (turnCycle.phase === \"attack\") {\n      if (player.id === this.state.player_id) {\n        if (cardsInclude(turnCycle[\"id\" + this.state.player_id].cards, card)) {\n          turnCycle[\"id\" + this.state.player_id].cards.splice(\n            cardIndex(turnCycle[\"id\" + this.state.player_id].cards, card),\n            1\n          );\n        } else {\n          turnCycle[\"id\" + this.state.player_id].cards.push(card);\n        }\n\n        // We’re finished here for now\n        this.emitEvent({ turnCycle });\n        return;\n      }\n    }\n  };\n  tableauClick = (card, player) => {\n    // This function determines what to do when you\n    // click on a card in a hand given the state of the turn cycle.\n    const turnCycle = cloneDeep(this.state.turnCycle);\n\n    if (turnCycle.phase === \"initial\") {\n      turnCycle.cards.push(card);\n      turnCycle.phase = \"selected-tableau\";\n      turnCycle.action = \"discard\";\n\n      // Check if the selected card is the ressurection stone\n      if (\n        card.name === \"resurrection_stone\" &&\n        // You can only use the stone once per turn\n        !turnCycle.used.includes(\"ressurection_stone\")\n      ) {\n        turnCycle.phase = \"ressurection_stone\";\n        turnCycle.action = \"ressurection_stone\";\n      }\n\n      this.emitEvent({ turnCycle });\n      return;\n    } else if (\n      turnCycle.phase === \"selected-tableau\" ||\n      turnCycle.phase === \"ressurection_stone\"\n    ) {\n      if (player.id === this.state.player_id) {\n        if (cardsInclude(turnCycle.cards, card)) {\n          turnCycle.cards.splice(cardIndex(turnCycle.cards, card), 1);\n        } else {\n          turnCycle.cards.push(card);\n          turnCycle.phase = \"selected-tableau\";\n        }\n\n        if (\n          turnCycle.cards.length === 1 &&\n          // Check if the selected card is the ressurection stone\n          turnCycle.cards[0].name === \"resurrection_stone\" &&\n          // You can only use the stone once per turn\n          !turnCycle.used.includes(\"ressurection_stone\")\n        ) {\n          turnCycle.phase = \"ressurection_stone\";\n          turnCycle.action = \"ressurection_stone\";\n        }\n\n        if (turnCycle.cards.length === 0) cycleCleanse(turnCycle, this);\n      }\n\n      this.emitEvent({ turnCycle });\n      return;\n    }\n\n    if (turnCycle.phase === \"selected\") {\n      if (\n        cardTargets(turnCycle.action, turnCycle).includes(\"my-tableau-empty\") ||\n        cardTargets(turnCycle.action, turnCycle).includes(\"tableau-empty\")\n      ) {\n        const players = cloneDeep(this.state.players),\n          tableauPlayer = players[playerIndex(players, player.id)],\n          handPlayer = players[playerIndex(players, this.state.player_id)];\n\n        tableauPlayer.tableau.push(\n          handPlayer.hand.splice(\n            cardIndex(handPlayer.hand, turnCycle.cards[0]),\n            1\n          )[0]\n        );\n\n        if (turnCycle.cards[0].name === \"fiendfyre\") {\n          const fiendfyre = playCard.fiendfyre.primary(player, this, turnCycle);\n\n          if (!fiendfyre) return;\n\n          this.emitEvent(Object.assign(fiendfyre.state, { turnCycle }));\n          // We’re done here for now\n          return;\n        }\n\n        cycleCleanse(turnCycle, this);\n        const tp = tableauProblems(tableauPlayer.tableau);\n\n        if (tp) {\n          this.addAlert(tp);\n          return;\n        }\n\n        this.emitEvent({ turnCycle, players });\n        return;\n      } else {\n        const eventCreation = playCard[turnCycle.action].primary(\n          player,\n          card,\n          this,\n          turnCycle\n        );\n\n        if (!eventCreation) return;\n        turnCycle.phase = \"attack\";\n\n        if (eventCreation.resolve) {\n          cycleCleanse(turnCycle, this);\n          this.emitEvent(Object.assign(eventCreation.state, { turnCycle }));\n          return;\n        }\n      }\n    }\n  };\n  characterClick = (player) => {\n    // This function determines what to do when you\n    // click on a card in a hand given the state of the turn cycle.\n    const turnCycle = cloneDeep(this.state.turnCycle);\n\n    if (turnCycle.phase === \"selected\" || turnCycle.phase === \"felix\") {\n      const eventCreation = playCard[turnCycle.action].primary(\n        player,\n        this,\n        turnCycle\n      );\n\n      console.log(turnCycle);\n      if (!eventCreation) return;\n      if (turnCycle.phase === \"selected\") turnCycle.phase = \"attack\";\n      turnCycle.hotseat = player.id;\n\n      if (eventCreation.resolve) {\n        cycleCleanse(turnCycle, this);\n        this.emitEvent(Object.assign(eventCreation.state, { turnCycle }));\n        return;\n      } else {\n        this.emitEvent(Object.assign(eventCreation.state, { turnCycle }));\n      }\n    }\n  };\n  tableClick = (card) => {\n    // This function determines what to do when you\n    // click on a card in a hand given the state of the turn cycle.\n    const turnCycle = cloneDeep(this.state.turnCycle);\n    var eventCreation = false;\n\n    if (turnCycle.phase === \"selected\") {\n      eventCreation = playCard[turnCycle.action].primary(card, this, turnCycle);\n    } else if (turnCycle.phase === \"ressurection_stone\") {\n      // Lay out all of the cards for the\n      eventCreation = playCard[turnCycle.action].primary(card, this, turnCycle);\n\n      this.setState(eventCreation);\n      console.log(eventCreation);\n\n      return;\n    } else {\n      eventCreation = playCard[turnCycle.action].secondary(\n        card,\n        this,\n        turnCycle\n      );\n    }\n\n    if (!eventCreation) return;\n\n    if (!eventCreation.resolve) {\n      this.emitEvent(Object.assign(eventCreation.state, { turnCycle }));\n    } else {\n      cycleCleanse(turnCycle, this);\n      this.emitEvent(Object.assign(eventCreation.state, { turnCycle }));\n    }\n  };\n  deckClick = (drawPile) => {\n    // This function determines what to do when you click\n    // on the draw or discard pile.\n    const turnCycle = cloneDeep(this.state.turnCycle);\n    const players = cloneDeep(this.state.players),\n      deck = new Deck(\n        [...this.state.deck.cards],\n        [...this.state.deck.discards]\n      );\n\n    // Draw pile first\n    if (drawPile === \"draw\") {\n      if (turnCycle.phase === \"initial\") {\n        // If it's the beginning of the cycle then they\n        // will be drawing cards\n        players[playerIndex(players, this.state.player_id)].hand.unshift(\n          deck.drawCard()\n        );\n\n        turnCycle.draw--;\n        this.emitEvent({ turnCycle, deck, players });\n        return;\n      }\n\n      // Special event. Azkaban escape:\n      if (turnCycle.phase === \"azkaban\") {\n        // Try to draw to see if you get to take a turn.\n        const eventCreation = playCard.azkaban(this, turnCycle);\n\n        if (!eventCreation) return;\n\n        // If they didn’t succeed in escaping\n        if (!eventCreation.gotit) {\n          turnCycle.phase = \"stuck-in-azkaban\";\n          // Give them a few seconds to clock that it’s\n          // not their turn anymore\n          setTimeout(() => {\n            this.nextTurn();\n          }, 5000);\n        } else {\n          // If they escape, start their turn!\n          cycleCleanse(turnCycle, this);\n        }\n\n        // Submit the changes!\n        this.emitEvent(Object.assign(eventCreation.state, { turnCycle }));\n        return;\n      }\n    }\n\n    if (drawPile === \"discard\") {\n      const discardEvent = playCard.discardEvent.primary(this, turnCycle);\n\n      if (!discardEvent) return;\n\n      this.emitEvent(discardEvent.state);\n    }\n  };\n  apparate = (index) => {\n    const afterPlayer = cloneDeep(this.turnOrder()),\n      turnOrder = [],\n      deck = new Deck(\n        [...this.state.deck.cards],\n        [...this.state.deck.discards]\n      );\n\n    const turnCycle = cloneDeep(this.state.turnCycle);\n\n    // Reorder the players\n    const thisPlayer = afterPlayer.splice(0, 1),\n      beforePlayer = afterPlayer.splice(0, index),\n      players = [...beforePlayer, ...thisPlayer, ...afterPlayer];\n\n    players.forEach((player) => turnOrder.push(player.id));\n\n    const player = players[playerIndex(players, this.state.player_id)];\n\n    // Discard the apparate card\n    discard(player, deck, turnCycle.cards);\n    cycleCleanse(turnCycle, this);\n\n    const location =\n        \" apparated between \" +\n        beforePlayer[beforePlayer.length - 1].character.shortName +\n        \" and \" +\n        afterPlayer[0].character.shortName +\n        \".\",\n      events = [\n        resolutionEvent(\n          \"You have\" + location,\n          [player.id],\n          player.character.shortName + location\n        ),\n      ];\n\n    this.emitEvent({ players, turnOrder, turnCycle, deck, events });\n  };\n\n  actionClick = (action, index) => {\n    this.pauseRoom();\n    const turnCycle = cloneDeep(this.state.turnCycle);\n\n    turnCycle[\"id\" + this.state.player_id].choice = action;\n    const result = playCard[turnCycle.action][action](this, index, turnCycle);\n\n    if (!result) return;\n\n    let workingState = {};\n\n    if (result.resolve) {\n      const events = result.state.events\n        ? result.state.events\n        : cloneDeep(this.state.events);\n\n      if (events[0].target.length > 1) {\n        const event = events[0];\n        event.target.splice(event.target.indexOf(this.state.player_id), 1);\n        workingState.events = events;\n      } else {\n        const resolution = playCard[turnCycle.action].resolution(this, action);\n\n        events.shift();\n\n        if (resolution.event) {\n          events.unshift(resolution.event);\n        }\n\n        turnCycle.phase = \"initial\";\n        workingState.events = events;\n      }\n    }\n\n    if (result.state.players) {\n      const newlyDead = deathCheck(\n        result.state.players,\n        this.state.deadPlayers\n      );\n      if (newlyDead.length > 0) {\n        const deathObj = playCard.death.primary(\n          this,\n          Object.assign(result.state, workingState),\n          turnCycle\n        );\n\n        workingState = Object.assign(workingState, deathObj);\n\n        console.log(deathObj);\n        // this.addAlert(\n        //   \"THIS PLAYER DIES WHEN YOU DO THAT. SETUP THE DEATH FUNCTION.\"\n        // );\n        // return;\n      }\n    }\n\n    // If it's still on the initial phase,\n    // then go ahead and reset it\n    if (turnCycle.phase === \"initial\") cycleCleanse(turnCycle, this);\n    // Submit all changes\n    const state = Object.assign(result.state, workingState);\n    this.emitEvent(Object.assign(state, { turnCycle }));\n\n    this.resumeRoom();\n  };\n\n  chooseCharacter = (character) => {\n    const players = cloneDeep(this.state.players),\n      thisPlayer = players[playerIndex(players, this.state.player_id)],\n      deck = new Deck(\n        [...this.state.deck.cards],\n        [...this.state.deck.discards]\n      ),\n      turnCycle = cloneDeep(this.state.turnCycle);\n\n    // Change the character array to the selected character\n    thisPlayer.character = character;\n\n    // If it’s the minister, give them an extra health\n    if (thisPlayer.role === \"minister\") {\n      thisPlayer.character.health++;\n      thisPlayer.character.maxHealth++;\n    }\n\n    thisPlayer.power.push(thisPlayer.character.fileName);\n\n    // Deal out cards equal to the life points\n    thisPlayer.hand = deck.drawCards(thisPlayer.character.health);\n\n    // If it's the last one, start the game!\n    if (!players.some((p) => Array.isArray(p.character)))\n      turnCycle.phase = \"initial\";\n\n    this.emitEvent({ players, deck, turnCycle });\n  };\n\n  clearResolution = () => {\n    const events = cloneDeep(this.state.events);\n    events.shift();\n\n    const actions = popUp({ events }, this);\n    this.setState({ events, actions });\n  };\n\n  toggleCards = () => {\n    let showCards = !this.state.showCards;\n    this.setState({ showCards });\n  };\n\n  render() {\n    const orderedPlayers = this.turnOrder(),\n      targets = this.state.running ? getTargets(this) : [];\n\n    return (\n      <React.Fragment>\n        {Array.isArray(orderedPlayers[0].character) ? (\n          <ChooseCharacter\n            chooseCharacter={this.chooseCharacter}\n            player={orderedPlayers[0]}\n          />\n        ) : (\n          \"\"\n        )}\n        <div className=\"alert-holder\">\n          {this.state.actions.message !== \"\" ? (\n            <Action\n              that={this.state}\n              running={this.state.running}\n              Alert={this.addAlert}\n              player_id={this.state.player_id}\n              players={orderedPlayers}\n              actions={this.state.actions}\n              acFunction={this.actionClick}\n              deleteMe={this.clearResolution}\n            />\n          ) : (\n            \"\"\n          )}\n          {this.state.alerts.map((alert, i) => (\n            <Alert\n              deleteMe={this.deleteAlert}\n              index={i}\n              key={i}\n              message={alert}\n            />\n          ))}\n        </div>\n        <div className=\"col-md-8\">\n          <CardDeck\n            that={this.state}\n            targets={targets}\n            deckClick={this.deckClick}\n            deck={this.state.deck}\n          ></CardDeck>\n          <Table\n            that={this.state}\n            targets={targets}\n            tableClick={this.tableClick}\n            table={this.state.table}\n          />\n          {orderedPlayers.map((player, i) => (\n            <Player\n              that={this.state}\n              targets={targets}\n              player_id={this.state.player_id}\n              key={i}\n              index={i}\n              player={player}\n              players={orderedPlayers}\n              handClick={this.handClick}\n              tableauClick={this.tableauClick}\n              characterClick={this.characterClick}\n              apparate={this.apparate}\n            ></Player>\n          ))}\n        </div>\n        <SideBar\n          that={this.state}\n          player_id={this.state.player_id}\n          endTurn={this.nextTurn}\n          boardDeets={this.board}\n          query={this.props.query}\n          players={orderedPlayers}\n          turn={this.state.turn}\n          toggleCards={this.toggleCards}\n        />\n      </React.Fragment>\n    );\n  }\n}\n\nexport default Board;\n","import { cardTargets } from \"./card-targets\";\n\nconst getTargets = (that) => {\n  const turnCycle = that.state.turnCycle,\n    targets = [];\n\n  if (that.state.turn === that.state.player_id) {\n    if (\n      turnCycle.phase === \"initial\" ||\n      turnCycle.phase === \"stuck-in-azkaban\"\n    ) {\n      targets.push(...[\"my-hand\", \"my-tableau\"]);\n      if (turnCycle.draw > 0) targets.push(\"draw\");\n      return targets;\n    }\n\n    if (turnCycle.phase === \"selected\") {\n      targets.push(...[\"my-hand\", \"discard\"]);\n\n      targets.push(...cardTargets(turnCycle.action, turnCycle));\n\n      return targets;\n    }\n\n    if (turnCycle.phase === \"felix\") {\n      targets.push(\"characters\");\n      return targets;\n    }\n\n    if (turnCycle.phase === \"selected-stuck-in-azkaban\") {\n      targets.push(...[\"my-hand\", \"discard\"]);\n      return targets;\n    }\n\n    if (turnCycle.phase === \"selected-tableau\") {\n      targets.push(...[\"my-tableau\", \"discard\"]);\n      return targets;\n    }\n\n    if (turnCycle.action === \"ressurection_stone\") {\n      if (turnCycle.phase === \"ressurection_stone\") {\n        targets.push(...[\"my-tableau\", \"discard\", \"characters\"]);\n        /* if (turnCycle.draw === 2) */ targets.push(\"table-empty\");\n      }\n      if (turnCycle.phase === \"ressurection_stone-discards\")\n        targets.push(\"table\");\n\n      return targets;\n    }\n  }\n\n  if (\n    turnCycle.phase === \"attack\" &&\n    (that.state.events[0]?.target.includes(that.state.player_id) ||\n      that.state.player_id === turnCycle.hotseat)\n  ) {\n    targets.push(\"my-hand\");\n  }\n\n  if (\n    turnCycle.phase === \"diagon_alley\" &&\n    that.state.events[0]?.target.includes(that.state.player_id)\n  ) {\n    targets.push(\"table\");\n  }\n\n  if (\n    turnCycle.phase === \"azkaban\" &&\n    that.state.events[0]?.target.includes(that.state.player_id)\n  ) {\n    targets.push(\"draw\");\n  }\n\n  //   console.log(that.state.player_id);\n  //   console.log(turnCycle.hotseat);\n  //   console.log(targets);\n\n  return targets;\n};\n\nexport { getTargets, cardTargets };\n","import React, { Component } from \"react\";\nimport { Redirect } from \"react-router-dom\";\n\nclass CreateRoom extends Component {\n  state = {\n    roomname: \"\",\n    password: \"\",\n    playername: \"\",\n    redirect: { value: false, location: \"\" },\n  };\n\n  handleChange = (event) => {\n    this.setState({ [event.target.name]: event.target.value });\n  };\n\n  handleSubmit = (event) => {\n    alert(\"A name was submitted: \" + this.state.roomname);\n    event.preventDefault();\n  };\n\n  createRoom = () => {\n    const apiLocation =\n      (process.env.NODE_ENV !== \"development\"\n        ? \"\"\n        : window.location.origin.replace(window.location.port, \"4001\")) +\n      \"/database/wait/create/\";\n\n    const queryString =\n      \"?player=\" +\n      encodeURIComponent(this.state.playername) +\n      \"&room=\" +\n      encodeURIComponent(this.state.roomname) +\n      (this.state.password\n        ? \"&pw=\" + encodeURIComponent(this.state.password)\n        : \"\");\n    console.log(\"?\" + queryString);\n\n    fetch(apiLocation + queryString)\n      .then((res) => res.json())\n      .then((result) => {\n        if (result[0]) {\n          const location =\n            \"?room=\" +\n            result[0].roomName +\n            \"&id=\" +\n            result[0].players[0].id +\n            \"&key=\" +\n            result[0].password;\n\n          this.setState({ redirect: { value: true, location } });\n        } else {\n          console.log(\"whhyyyy\");\n          this.props.addAlert(\n            \"This room already exists & in use. Try a different name or go back to join the room.\"\n          );\n        }\n      });\n  };\n\n  renderRedirect = () => {\n    return <Redirect to={\"/waiting-room/\" + this.state.redirect.location} />;\n  };\n\n  render() {\n    return (\n      <React.Fragment>\n        {this.state.redirect.value ? this.renderRedirect() : \"\"}\n        <div\n          className=\"back-button\"\n          onClick={() => {\n            this.props.changeToggle(\"intro\");\n          }}\n        >\n          &lt;- Back\n        </div>\n        <div className=\"info-block\">\n          <div className=\"text\">Enter Your Name:</div>\n          <input\n            className=\"room-input\"\n            name=\"playername\"\n            type=\"text\"\n            placeholder=\"Moony\"\n            autoComplete=\"off\"\n            value={this.state.value}\n            onChange={this.handleChange}\n          />\n        </div>\n\n        <div className=\"info-block bottom\">\n          <div className=\"text\">Enter Room Details:</div>\n          <input\n            className=\"room-input\"\n            name=\"roomname\"\n            type=\"text\"\n            autoComplete=\"off\"\n            placeholder=\"Room Name\"\n            value={this.state.value}\n            onChange={this.handleChange}\n          />\n          <input\n            className=\"room-input\"\n            name=\"password\"\n            type=\"text\"\n            autoComplete=\"off\"\n            style={{\n              marginTop: 0,\n            }}\n            placeholder=\"Password? (leave blank for none)\"\n            value={this.state.password}\n            onChange={this.handleChange}\n          />\n        </div>\n        <div onClick={this.createRoom} className=\"button create\">\n          create\n        </div>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default CreateRoom;\n","import React, { Component } from \"react\";\nimport { Redirect } from \"react-router-dom\";\n\nclass JoinRoom extends Component {\n  state = {\n    roomname: \"\",\n    password: \"\",\n    playername: \"\",\n    redirect: { value: false, location: \"\" },\n  };\n\n  handleChange = (event) => {\n    this.setState({ [event.target.name]: event.target.value });\n  };\n\n  handleSubmit = (event) => {\n    alert(\"A name was submitted: \" + this.state.roomname);\n    event.preventDefault();\n  };\n\n  createRoom = () => {\n    const apiLocation =\n      (process.env.NODE_ENV !== \"development\"\n        ? \"\"\n        : window.location.origin.replace(window.location.port, \"4001\")) +\n      \"/database/wait/join/\";\n\n    const queryString =\n      \"?player=\" +\n      encodeURIComponent(this.state.playername) +\n      \"&room=\" +\n      encodeURIComponent(this.state.roomname) +\n      (this.state.password\n        ? \"&pw=\" + encodeURIComponent(this.state.password)\n        : \"\");\n    console.log(\"?\" + queryString);\n\n    fetch(apiLocation + queryString)\n      .then((res) => res.json())\n      .then((result) => {\n        console.log(result);\n        if (result[0]) {\n          if (result[0].error) {\n            this.props.addAlert(result[0].error);\n          } else {\n            const location =\n              \"?room=\" +\n              result[0].roomName +\n              \"&id=\" +\n              result[0].players[result[0].players.length - 1].id +\n              \"&key=\" +\n              result[0].password;\n\n            this.setState({ redirect: { value: true, location } });\n          }\n\n          console.log(result);\n\n          //   this.setState({ redirect: { value: true, location } });\n        } else {\n          console.log(\"whhyyyy\");\n          this.props.addAlert(\"This room doesnt exist! Go back to create it.\");\n        }\n      });\n  };\n\n  renderRedirect = () => {\n    return <Redirect to={\"/waiting-room/\" + this.state.redirect.location} />;\n  };\n\n  render() {\n    return (\n      <React.Fragment>\n        {this.state.redirect.value ? this.renderRedirect() : \"\"}\n        <div\n          className=\"back-button\"\n          onClick={() => {\n            this.props.changeToggle(\"intro\");\n          }}\n        >\n          &lt;- Back\n        </div>\n        <div className=\"info-block\">\n          <div className=\"text\">Enter Your Name:</div>\n          <input\n            autoComplete=\"off\"\n            className=\"room-input\"\n            name=\"playername\"\n            type=\"text\"\n            placeholder=\"Luna\"\n            value={this.state.value}\n            onChange={this.handleChange}\n          />\n        </div>\n\n        <div className=\"info-block bottom\">\n          <div className=\"text\">Enter Room Details:</div>\n          <input\n            autoComplete=\"off\"\n            className=\"room-input\"\n            name=\"roomname\"\n            type=\"text\"\n            placeholder=\"Room Name\"\n            value={this.state.value}\n            onChange={this.handleChange}\n          />\n          <input\n            autoComplete=\"off\"\n            className=\"room-input\"\n            name=\"password\"\n            type=\"text\"\n            style={{\n              marginTop: 0,\n            }}\n            placeholder=\"Password? (leave blank for open rooms)\"\n            value={this.state.password}\n            onChange={this.handleChange}\n          />\n        </div>\n        <div onClick={this.createRoom} className=\"button create\">\n          join\n        </div>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default JoinRoom;\n","import React, { Component } from \"react\";\nimport CreateRoom from \"./create-room\";\nimport JoinRoom from \"./join-room\";\nimport \"./create-join.css\";\nimport Alert from \"../alert\";\n\nclass CreateJoin extends Component {\n  state = {\n    toggle: \"intro\",\n    alerts: [],\n  };\n\n  changeToggle = (change) => {\n    this.setState({ toggle: change });\n  };\n\n  addAlert = (alert) => {\n    const alerts = [...this.state.alerts, alert];\n    this.setState({ alerts });\n  };\n\n  deleteAlert = (i) => {\n    let alerts = [...this.state.alerts];\n    alerts.splice(i, 1);\n    this.setState({ alerts });\n  };\n\n  render() {\n    return (\n      <div className=\"create-join\">\n        {this.state.alerts.map((alert, i) => (\n          <Alert\n            deleteMe={this.deleteAlert}\n            index={i}\n            key={i}\n            message={alert}\n          />\n        ))}\n        <div\n          className={\n            \"intro\" + (this.state.toggle === \"intro\" ? \" visible\" : \" hidden\")\n          }\n        >\n          <div className=\"text\">\n            Would you like to join an existing room or start a new one?\n          </div>\n          <div\n            onClick={() => {\n              this.changeToggle(\"join\");\n            }}\n            className=\"button join\"\n          >\n            join\n          </div>\n          <div\n            onClick={() => {\n              this.changeToggle(\"create\");\n            }}\n            className=\"button create\"\n          >\n            create\n          </div>\n        </div>\n        <div\n          className={\n            \"create-room\" +\n            (this.state.toggle === \"create\" ? \" visible\" : \" hidden\")\n          }\n        >\n          <CreateRoom\n            addAlert={this.addAlert}\n            changeToggle={this.changeToggle}\n          />\n        </div>\n        <div\n          className={\n            \"join-room\" +\n            (this.state.toggle === \"join\" ? \" visible\" : \" hidden\")\n          }\n        >\n          <JoinRoom addAlert={this.addAlert} changeToggle={this.changeToggle} />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default CreateJoin;\n","import React, { Component } from \"react\";\n\nclass WaitingPlayer extends Component {\n  state = {};\n  render() {\n    return (\n      <div\n        className={\n          \"waiting-player\" +\n          (this.props.id == this.props.player.id ? \" you\" : \"\")\n        }\n        onClick={() => {\n          this.props.sendToSocket(\"Yeah?\");\n        }}\n      >\n        {this.props.player.name}\n      </div>\n    );\n  }\n}\n\nexport default WaitingPlayer;\n","import React, { Component } from \"react\";\nimport Moment from \"react-moment\";\n\nclass ChatMessage extends Component {\n  state = {};\n\n  getName = () => {\n    const players = [...this.props.allPlayers],\n      index = players.findIndex(\n        (player) => player.id == this.props.message.player\n      );\n\n    if (index === -1) return \"unknown\";\n\n    return players[index].name;\n  };\n\n  render() {\n    return (\n      <div\n        className={\n          \"message-container\" +\n          (this.props.message.player === this.props.id ? \" this-player\" : \"\")\n        }\n      >\n        <div className=\"heading\">\n          <div className=\"name\">{this.getName()}</div>\n          <div className=\"time\">\n            <Moment format=\"h:mm\">{this.props.message.time}</Moment>\n          </div>\n        </div>\n        <div className=\"message\">{this.props.message.text}</div>\n      </div>\n    );\n  }\n}\n\nexport default ChatMessage;\n","import React, { Component } from \"react\";\nimport queryString from \"query-string\";\nimport WaitingPlayer from \"./waiting-player\";\nimport ChatMessage from \"./chat\";\nimport socketIOClient from \"socket.io-client\";\n// import io from \"socket.io-client/dist/socket.io\";\nimport camelCase from \"lodash/camelCase\";\nimport \"./room.css\";\nimport { Redirect } from \"react-router-dom\";\n\nconst ENDPOINT =\n  process.env.NODE_ENV !== \"development\"\n    ? window.location.origin\n    : window.location.origin.replace(window.location.port, \"4001\");\n// const ENDPOINT = window.location.origin \"http://127.0.0.1:4001\";\n// const socket = socketIOClient(ENDPOINT);\n\nconsole.log(ENDPOINT);\n\nconsole.log(process.env.NODE_ENV);\n\n// console.log(socket);\n\nclass Room extends Component {\n  state = {\n    q: queryString.parse(this.props.location.search),\n    players: [],\n    filtered_players: [],\n    chat: [],\n    id: 0,\n    socket: { sockets: {}, users: [] },\n    message: \"\",\n    gameState: false,\n    startState: true,\n  };\n  //   getQueryObj = () => {\n  //     return queryString.parse(this.props.location.search);\n  //   };\n\n  componentDidMount = () => {\n    this.socket = socketIOClient(ENDPOINT);\n    // Join the socket for the room we’re in\n    this.socket.emit(\"join-waiting-room\", {\n      room: this.state.q.room,\n      socketroom: camelCase(this.state.q.room) + \"-waiting\",\n      id: this.state.q.id,\n    });\n\n    // What to do when you get new info from the socket\n    this.socket.on(\"from-the-waiting-room\", (data) => {\n      this.catchSocket(data);\n    });\n\n    const apiLocation = ENDPOINT + \"/database/wait/get/\";\n\n    const queryString = this.props.location.search;\n    console.log(queryString);\n\n    fetch(apiLocation + queryString)\n      .then((res) => res.json())\n      .then((result) => {\n        console.log(result);\n\n        this.setState({ players: result[0].players, chat: result[0].chat });\n        this.socket.emit(\"waiting-players\", {\n          socketroom: camelCase(this.state.q.room) + \"-waiting\",\n          players: result[0].players,\n        });\n      });\n  };\n\n  //   static getDerivedStateFromProps(props, state)\n\n  componentDidUpdate = (prevProps, prevState) => {\n    if (\n      prevState.players !== this.state.players ||\n      prevState.socket !== this.state.socket\n    ) {\n      const filtered_players = this.filterPlayer();\n      this.setState({ filtered_players });\n    }\n  };\n\n  catchSocket = (data) => {\n    console.log(data);\n    this.setState(data);\n  };\n\n  sendToSocket = (info) => {\n    this.socket.emit(\"to-waiting-room\", {\n      room: this.state.q.room,\n      socketroom: this.state.q.room.replace(\" \", \"-\") + \"-waiting\",\n      info: info,\n    });\n  };\n\n  filterPlayer = () => {\n    const players = [...this.state.players],\n      activePlayers = [];\n\n    for (let socket in this.state.socket.sockets) {\n      activePlayers.push(Number(this.state.socket.users[socket]));\n    }\n\n    let filtered_players = players.filter((player) => {\n      return activePlayers.includes(player.id);\n    });\n\n    return filtered_players;\n  };\n\n  handleChange = (event) => {\n    this.setState({ [event.target.name]: event.target.value });\n  };\n\n  enterChat = () => {\n    if (this.state.message) {\n      const message = this.state.message;\n\n      this.setState({ message: \"\" });\n      const chat = [...this.state.chat],\n        newChat = {\n          text: message,\n          time: Date.now(),\n          player: this.state.q.id,\n        };\n\n      this.socket.emit(\"waiting-chat\", newChat);\n      chat.push(newChat);\n      this.setState({ chat: chat });\n    }\n  };\n\n  startGame = () => {\n    if (this.state.startState)\n      this.socket.emit(\"set-up-game\", {\n        room: camelCase(this.state.q.room),\n        players: this.state.filtered_players,\n      });\n  };\n\n  renderRedirect = () => {\n    return <Redirect to={\"/play/\" + this.props.location.search} />;\n  };\n\n  render() {\n    return (\n      <div className=\"waiting-room\">\n        {this.state.gameState ? this.renderRedirect() : \"\"}\n        <header>\n          <div className=\"stupefy-title\"></div>\n        </header>\n        <div className=\"player-list\">\n          <h1>{this.state.q.room}</h1>\n          {this.state.filtered_players.map((player, index) => (\n            <WaitingPlayer\n              sendToSocket={this.sendToSocket}\n              key={index}\n              player={player}\n              id={this.state.q.id}\n            />\n          ))}\n          {this.state.gameState ? <a className=\"button\">go to game</a> : \"\"}\n          <div\n            onClick={this.startGame}\n            className={\"button\" + (this.state.startState ? \"\" : \" disabled\")}\n          >\n            start game\n          </div>\n        </div>\n        <div className=\"chat-box\">\n          <div className=\"chats\">\n            {this.state.chat.map((message, i) => (\n              <ChatMessage\n                key={i}\n                id={this.state.q.id}\n                message={message}\n                allPlayers={this.state.players}\n              />\n            ))}\n          </div>\n          <div className=\"message-input\">\n            <input\n              className=\"chat-input\"\n              name=\"message\"\n              type=\"text\"\n              value={this.state.message}\n              onChange={this.handleChange}\n              autoComplete=\"off\"\n              onKeyDown={(e) => {\n                if (e.key === \"Enter\") this.enterChat();\n              }}\n            />\n            <div onClick={this.enterChat} className=\"button submit-chat\">\n              &#9166;\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Room;\n","import React, { Component } from \"react\";\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Redirect,\n} from \"react-router-dom\";\nimport \"./App.css\";\nimport Board from \"./components/board\";\nimport CreateJoin from \"./components/create-join/create-join.jsx\";\nimport Room from \"./components/create-join/room\";\nimport queryString from \"query-string\";\nimport { render } from \"@testing-library/react\";\nimport { camelCase } from \"lodash\";\n// import socketIOClient from \"socket.io-client\";\n// const ENDPOINT = \"http://127.0.0.1:4001\";\n\n// const socket = io();\n// const { room } = Qs.parse(location.search, {\n//   ignoreQueryPrefix: true,\n// });\n\n// const thisPlayer = players[0];\n\n// initialDeck.shuffle();\n// characterDeck.shuffle();\n\nclass Stupefy extends Component {\n  getQueryObj = () => {\n    return queryString.parse(this.props.location.search);\n  };\n\n  state = {\n    setupObj: {},\n    q: this.getQueryObj(),\n    isLoaded: false,\n  };\n\n  componentDidMount() {\n    const apiLocation =\n      (process.env.NODE_ENV !== \"development\"\n        ? \"\"\n        : window.location.origin.replace(window.location.port, \"4001\")) +\n      \"/database/players/\";\n\n    fetch(\n      apiLocation +\n        \"?room=\" +\n        camelCase(this.state.q.room) +\n        \"&id=\" +\n        +this.state.q.id\n    )\n      .then((res) => res.json())\n      .then(\n        (result) => {\n          if (result) {\n            console.log(result);\n            this.setState({\n              setupObj: result[0],\n              isLoaded: true,\n            });\n          } else {\n            this.setState({ isLoaded: \"no-room\" });\n          }\n        },\n        // Note: it's important to handle errors here\n        // instead of a catch() block so that we don't swallow\n        // exceptions from actual bugs in components.\n        (error) => {\n          this.setState({\n            isLoaded: true,\n            error,\n          });\n        }\n      );\n  }\n\n  render() {\n    const { error, isLoaded } = this.state;\n    if (error) {\n      return <div>Error: {error.message}</div>;\n    } else if (!isLoaded) {\n      return <div className=\"loading\">Loading...</div>;\n    } else if (isLoaded === \"no-room\") {\n      return <div className=\"loading\">This room doesn’t exist!</div>;\n    } else {\n      // if (typeof this.state.q.id === \"string\") {\n      let q = Object.assign(this.state.q);\n      q.id = Number(q.id);\n      // }\n\n      return (\n        <div className=\"container\">\n          <div className=\"row\">\n            <Board\n              onRef={(ref) => (this.board = ref)}\n              query={q}\n              setupObj={this.state.setupObj}\n            />\n          </div>\n        </div>\n      );\n    }\n  }\n}\n\nfunction App() {\n  const renderRedirect = (location) => {\n    return <Redirect to={\"/\" + location} />;\n  };\n\n  return (\n    <Router>\n      {window.location.pathname === \"/\" ? renderRedirect(\"welcome\") : \"\"}\n      <Route path=\"/welcome/\" render={(props) => <CreateJoin {...props} />} />\n      <Route path=\"/waiting-room/\" render={(props) => <Room {...props} />} />\n      <Route path=\"/play/\" render={(props) => <Stupefy {...props} />} />\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport \"./stylesheets/board.css\";\nimport \"./stylesheets/cards.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}